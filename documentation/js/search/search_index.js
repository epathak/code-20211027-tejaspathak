var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AppModule.html",[0,0.415,1,1.484]],["body/classes/AppModule.html",[0,0.32,1,2.496,2,0.475,3,0.771,4,0.39,5,0.253,6,0.875,7,0.633,8,1.422,9,1.844,10,1.844,11,1.844,12,1.144,13,3.586,14,1.844,15,1.844,16,1.844,17,2.275,18,1.664,19,1.422,20,1.422,21,1.422,22,1.844,23,1.422,24,0.937,25,0.253,26,0.937,27,2.967,28,2.437,29,1.393,30,2.226,31,1.144,32,1.844,33,2.681,34,1.664,35,3.16,36,0.704,37,1.844,38,1.296,39,1.763,40,1.844,41,1.144,42,1.763,43,0.937,44,0.077,45,0.937,46,0.969,47,0.937,48,2.328,49,1.844,50,1.844,51,1.844,52,2.068,53,2.328,54,1.135,55,1.606,56,2.437,57,0.921,58,0.651,59,1.135,60,1.844,61,1.144,62,2.328,63,1.844,64,1.844,65,1.844,66,1.135,67,2.681,68,1.844,69,1.144,70,1.322,71,1.144,72,1.135,73,1.422,74,1.844,75,1.135,76,1.844,77,1.844,78,2.328,79,1.844,80,1.135,81,1.844,82,1.144,83,1.844,84,1.844,85,1.844,86,2.066,87,1.844,88,1.422,89,0.577,90,1.135,91,1.144,92,0.875,93,1.135,94,0.771,95,1.451,96,0.704,97,1.135,98,0.875,99,1.135,100,1.135,101,1.135,102,1.135,103,1.135,104,1.135,105,1.135,106,1.135,107,1.135,108,1.135,109,0.875,110,1.135,111,1.135,112,1.135,113,1.135,114,1.135,115,1.135,116,0.704,117,1.135,118,0.875,119,1.135,120,1.135,121,1.135,122,1.135,123,1.844,124,1.135,125,1.844,126,1.135,127,1.144,128,1.135,129,1.135,130,1.135,131,0.03,132,0.03]],["title/interfaces/Controller.html",[38,0.821,133,1.215]],["body/interfaces/Controller.html",[3,1.02,4,0.837,5,0.545,7,0.837,12,0.837,18,2.432,25,0.545,26,1.656,29,1.758,38,1.474,44,0.076,46,1.095,57,1.119,58,1.095,61,2.022,69,2.022,86,1.513,94,1.363,95,1.363,131,0.053,132,0.053,133,1.991,134,2.437,135,1.88,136,3.259,137,2.513,138,3.47,139,2.513,140,2.513,141,1.363,142,2.513,143,2.022,144,1.656]],["title/classes/LogComponent.html",[0,0.415,145,1.215]],["body/classes/LogComponent.html",[0,0.276,2,0.664,3,1.211,4,0.546,5,0.355,7,0.546,20,1.225,21,1.225,25,0.355,26,1.22,27,3.227,28,3.075,31,1.49,36,1.796,39,1.76,41,1.49,42,1.22,43,0.807,44,0.076,45,0.807,46,0.809,47,0.807,55,1.76,56,1.852,57,0.825,58,1.088,70,0.664,71,0.986,82,1.49,89,2.065,94,0.664,95,1.449,96,1.796,131,0.039,132,0.039,145,2.026,146,0.986,147,1.588,148,1.588,149,2.894,150,3.464,151,1.588,152,2.894,153,2.232,154,2.894,155,2.894,156,2.894,157,2.401,158,3.004,159,2.232,160,3.643,161,1.588,162,1.852,163,2.401,164,1.852,165,2.401,166,1.588,167,3.226,168,2.401,169,3.226,170,1.852,171,2.401,172,2.401,173,2.894,174,2.894,175,1.588,176,2.401,177,1.004,178,2.401,179,1.004,180,1.22,181,2.401,182,2.401,183,2.401,184,1.49,185,2.894,186,1.588,187,1.588,188,1.588,189,1.588,190,1.588,191,1.588]],["title/classes/SampleController.html",[0,0.415,192,1.484]],["body/classes/SampleController.html",[0,0.416,2,0.663,3,0.663,4,0.544,5,0.354,7,0.823,12,1.107,18,2.416,25,0.354,26,1.218,29,1.522,36,0.984,38,0.823,39,1.469,41,1.488,42,1.218,43,0.805,44,0.077,45,0.805,46,0.967,47,0.805,52,2.229,57,0.823,58,0.808,61,1.488,70,0.663,86,1.488,94,1.003,95,1.209,96,1.488,98,1.222,109,2.229,116,1.488,118,1.222,127,0.984,131,0.039,132,0.039,138,3.132,139,1.849,140,1.849,141,1.209,142,1.849,143,2.259,144,1.637,162,1.849,177,1.003,180,1.218,192,2.416,193,0.984,194,2.669,195,1.849,196,2.397,197,2.229,198,2.397,199,1.488,200,2.397,201,2.397,202,2.397,203,3.64,204,2.397,205,1.581,206,2.397,207,2.397,208,1.585,209,2.669,210,1.849,211,1.585,212,2.397,213,1.585,214,1.585,215,1.585,216,1.585,217,1.585,218,1.585,219,1.585,220,1.585,221,1.849,222,1.222,223,1.222,224,1.585,225,1.585,226,1.585,227,1.222,228,1.585,229,1.585,230,1.585,231,1.585,232,1.585,233,1.585,234,1.585]],["title/classes/SampleModule.html",[0,0.415,205,1]],["body/classes/SampleModule.html",[0,0.468,2,1.129,3,1.129,4,0.927,5,0.603,7,0.927,17,2.687,25,0.603,31,2.162,39,1.371,44,0.076,58,0.754,70,1.705,73,2.687,94,1.129,95,1.129,127,1.674,131,0.057,132,0.057,143,1.674,205,1.614,210,2.687,222,3.144,223,3.144,235,2.081,236,2.698,237,2.698,238,2.698,239,4.077,240,2.698,241,3.483,242,3.483,243,3.483,244,2.698,245,2.698,246,2.081,247,2.081]],["title/coverage.html",[248,2.481]],["body/coverage.html",[0,0.678,1,1.502,5,0.541,6,1.867,30,1.502,38,0.832,44,0.075,46,0.676,55,2.131,89,1.23,91,1.502,131,0.053,132,0.053,133,1.23,135,1.867,145,1.648,146,2.27,177,1.635,184,1.502,192,1.502,193,2.013,205,1.013,235,1.867,248,1.867,249,1.502,250,2.421,251,2.421,252,1.867,253,1.867,254,4.598,255,4.455,256,2.421,257,2.421,258,2.502,259,1.867,260,2.421,261,2.421,262,1.867,263,2.421,264,2.425,265,1.867,266,1.867,267,1.867,268,2.421,269,2.421]],["title/dependencies.html",[199,1.777,270,2.02]],["body/dependencies.html",[12,1.214,44,0.073,88,2.726,131,0.067,132,0.067,199,2.194,271,3.534,272,3.534]],["title/miscellaneous/functions.html",[273,1.027,274,2.209]],["body/miscellaneous/functions.html",[5,0.968,7,0.815,8,1.829,12,0.815,19,1.829,25,0.53,29,1.338,43,1.84,44,0.071,45,1.84,46,1.012,47,1.84,57,0.815,58,1.083,70,1.514,71,1.986,92,1.829,116,1.472,131,0.052,132,0.052,141,0.992,153,2.793,177,1.621,180,1.205,193,1.472,197,1.829,209,2.793,221,1.829,227,1.829,262,2.468,264,1.472,265,2.793,266,2.468,267,2.468,273,1.205,274,1.829,275,2.793,276,2.372,277,2.372,278,2.372,279,3.2,280,2.372,281,2.372,282,1.829,283,2.372,284,3.876,285,2.372,286,2.372,287,2.372,288,1.472,289,2.372,290,2.372,291,3.2,292,2.372,293,2.372,294,2.372,295,2.372,296,2.372,297,2.372,298,2.372,299,2.372]],["title/index.html",[25,0.451,300,1.558,301,1.558]],["body/index.html",[4,0.858,24,1.269,34,2.056,44,0.06,131,0.054,132,0.054,141,1.045,144,1.683,164,1.926,179,1.045,180,1.269,194,2.866,246,1.926,247,1.926,282,1.926,302,4.117,303,2.498,304,3.312,305,2.498,306,2.498,307,3.312,308,2.498,309,2.498,310,2.498,311,2.498,312,2.498,313,3.312,314,3.312,315,2.498,316,3.957,317,3.312,318,3.716,319,3.312,320,3.957,321,3.312,322,3.312,323,3.312,324,3.312,325,3.312,326,4.117,327,2.498,328,2.498,329,2.498,330,2.498,331,2.498,332,2.498,333,2.498,334,2.498,335,2.498,336,2.498,337,3.716,338,2.498,339,2.498,340,2.498,341,2.498,342,1.926,343,2.498,344,2.498,345,2.498]],["title/license.html",[300,1.558,301,1.558,346,1.558]],["body/license.html",[12,0.849,24,1.256,44,0.054,131,0.054,132,0.054,249,1.534,346,1.906,347,2.471,348,3.696,349,2.471,350,2.471,351,2.471,352,2.471,353,3.289,354,2.471,355,2.471,356,2.471,357,2.471,358,2.471,359,2.471,360,3.289,361,4.428,362,2.471,363,2.471,364,3.696,365,2.471,366,3.289,367,2.471,368,2.471,369,2.537,370,2.471,371,2.471,372,2.471,373,2.471,374,2.471,375,2.471,376,2.471,377,3.289,378,2.471,379,2.471,380,2.471,381,2.471,382,2.471,383,2.471,384,2.471,385,3.289,386,3.289,387,2.471,388,2.471,389,2.471,390,2.471,391,2.471,392,2.471,393,2.471,394,2.471,395,2.471,396,2.471,397,2.471,398,2.471,399,2.471,400,2.471,401,2.471,402,2.471,403,2.471,404,2.471,405,2.471,406,2.471,407,2.471,408,2.471,409,2.471,410,2.471,411,2.471,412,2.471,413,2.471,414,2.471,415,2.471,416,2.471]],["title/modules.html",[179,1.346]],["body/modules.html",[44,0.068,131,0.068,132,0.068,179,1.524]],["title/overview.html",[417,2.481]],["body/overview.html",[2,1.493,44,0.067,131,0.067,132,0.067,133,1.814,417,2.753,418,3.57,419,3.57]],["title/miscellaneous/variables.html",[273,1.027,288,1.777]],["body/miscellaneous/variables.html",[5,0.532,23,1.836,24,1.209,25,0.532,29,0.996,30,1.99,34,1.477,38,0.818,42,1.629,44,0.074,46,1.013,55,1.209,57,1.102,58,0.896,69,1.477,82,1.99,89,2.059,91,1.99,131,0.052,132,0.052,137,1.836,141,0.996,144,1.209,145,1.843,146,1.477,158,3.219,159,3.219,170,1.836,177,0.996,179,0.996,184,2.251,195,1.836,205,0.996,249,1.477,252,1.836,253,2.473,258,1.836,259,2.473,264,1.477,273,1.209,275,1.836,288,1.477,342,1.836,369,1.836,420,2.38,421,3.207,422,3.207,423,2.38,424,3.207,425,2.38,426,2.38,427,2.38,428,2.38,429,2.38,430,2.38,431,2.38,432,2.38,433,2.38,434,2.38,435,2.38,436,2.38,437,2.38,438,2.38,439,2.38,440,2.38]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":419,"title":{},"body":{"overview.html":{}}}],["1.7.4",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":245,"title":{},"body":{"classes/SampleModule.html":{}}}],["2021",{"_index":350,"title":{},"body":{"license.html":{}}}],["3/3",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["32mb",{"_index":107,"title":{},"body":{"classes/AppModule.html":{}}}],["4",{"_index":418,"title":{},"body":{"overview.html":{}}}],["4.17.1",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":260,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":384,"title":{},"body":{"license.html":{}}}],["action",{"_index":409,"title":{},"body":{"license.html":{}}}],["acts",{"_index":8,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/functions.html":{}}}],["and/or",{"_index":375,"title":{},"body":{"license.html":{}}}],["any)[config.method](config.route",{"_index":218,"title":{},"body":{"classes/SampleController.html":{}}}],["apart",{"_index":15,"title":{},"body":{"classes/AppModule.html":{}}}],["api",{"_index":17,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleModule.html":{}}}],["app",{"_index":13,"title":{},"body":{"classes/AppModule.html":{}}}],["app.models",{"_index":93,"title":{},"body":{"classes/AppModule.html":{}}}],["appcontrollers",{"_index":253,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":57,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":69,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"classes/AppModule.html":{}},"body":{"classes/AppModule.html":{},"coverage.html":{}}}],["appmodule(appcontrollers",{"_index":438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":413,"title":{},"body":{"license.html":{}}}],["associated",{"_index":362,"title":{},"body":{"license.html":{}}}],["async",{"_index":219,"title":{},"body":{"classes/SampleController.html":{}}}],["authors",{"_index":402,"title":{},"body":{"license.html":{}}}],["available",{"_index":168,"title":{},"body":{"classes/LogComponent.html":{}}}],["await",{"_index":224,"title":{},"body":{"classes/SampleController.html":{}}}],["base",{"_index":60,"title":{},"body":{"classes/AppModule.html":{}}}],["basic",{"_index":20,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["begins",{"_index":77,"title":{},"body":{"classes/AppModule.html":{}}}],["being",{"_index":128,"title":{},"body":{"classes/AppModule.html":{}}}],["body",{"_index":233,"title":{},"body":{"classes/SampleController.html":{}}}],["bootstrapper",{"_index":277,"title":{},"body":{"miscellaneous/functions.html":{}}}],["browser",{"_index":334,"title":{},"body":{"index.html":{}}}],["build",{"_index":338,"title":{},"body":{"index.html":{}}}],["buisness",{"_index":201,"title":{},"body":{"classes/SampleController.html":{}}}],["c",{"_index":349,"title":{},"body":{"license.html":{}}}],["called",{"_index":178,"title":{},"body":{"classes/LogComponent.html":{}}}],["charge",{"_index":357,"title":{},"body":{"license.html":{}}}],["claim",{"_index":405,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"overview.html":{}}}],["clone",{"_index":316,"title":{},"body":{"index.html":{}}}],["closed",{"_index":129,"title":{},"body":{"classes/AppModule.html":{}}}],["code",{"_index":243,"title":{},"body":{"classes/SampleModule.html":{}}}],["coding",{"_index":345,"title":{},"body":{"index.html":{}}}],["command",{"_index":318,"title":{},"body":{"index.html":{}}}],["component",{"_index":435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component's",{"_index":433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compression",{"_index":88,"title":{},"body":{"classes/AppModule.html":{},"dependencies.html":{}}}],["conditions",{"_index":383,"title":{},"body":{"license.html":{}}}],["config",{"_index":92,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/functions.html":{}}}],["config.handler(requestdetails",{"_index":225,"title":{},"body":{"classes/SampleController.html":{}}}],["configs",{"_index":213,"title":{},"body":{"classes/SampleController.html":{}}}],["configs.foreach((config",{"_index":217,"title":{},"body":{"classes/SampleController.html":{}}}],["configurable",{"_index":151,"title":{},"body":{"classes/LogComponent.html":{}}}],["configuration",{"_index":195,"title":{},"body":{"classes/SampleController.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":171,"title":{},"body":{"classes/LogComponent.html":{}}}],["configuring",{"_index":429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":415,"title":{},"body":{"license.html":{}}}],["const",{"_index":109,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleController.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{}}}],["constructor(controllers",{"_index":37,"title":{},"body":{"classes/AppModule.html":{}}}],["constructor(samplemodule",{"_index":204,"title":{},"body":{"classes/SampleController.html":{}}}],["containing",{"_index":430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contains",{"_index":50,"title":{},"body":{"classes/AppModule.html":{}}}],["contract",{"_index":410,"title":{},"body":{"license.html":{}}}],["controller",{"_index":38,"title":{"interfaces/Controller.html":{}},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/SampleController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.router",{"_index":112,"title":{},"body":{"classes/AppModule.html":{}}}],["controllers",{"_index":48,"title":{},"body":{"classes/AppModule.html":{}}}],["controllers(sub",{"_index":68,"title":{},"body":{"classes/AppModule.html":{}}}],["controllers.foreach((controller",{"_index":108,"title":{},"body":{"classes/AppModule.html":{}}}],["converts",{"_index":227,"title":{},"body":{"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["copies",{"_index":377,"title":{},"body":{"license.html":{}}}],["copy",{"_index":360,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":348,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":248,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":41,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{}}}],["custom",{"_index":147,"title":{},"body":{"classes/LogComponent.html":{}}}],["damages",{"_index":406,"title":{},"body":{"license.html":{}}}],["data",{"_index":223,"title":{},"body":{"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["date().toisostring",{"_index":185,"title":{},"body":{"classes/LogComponent.html":{}}}],["deal",{"_index":363,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":416,"title":{},"body":{"license.html":{}}}],["debug",{"_index":164,"title":{},"body":{"classes/LogComponent.html":{},"index.html":{}}}],["default",{"_index":158,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultloglevel",{"_index":154,"title":{},"body":{"classes/LogComponent.html":{}}}],["defaults",{"_index":182,"title":{},"body":{"classes/LogComponent.html":{}}}],["defined",{"_index":39,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["defining",{"_index":426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":199,"title":{"dependencies.html":{}},"body":{"classes/SampleController.html":{},"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"miscellaneous/functions.html":{}}}],["development",{"_index":282,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["distribute",{"_index":373,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":249,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["download",{"_index":322,"title":{},"body":{"index.html":{}}}],["during",{"_index":83,"title":{},"body":{"classes/AppModule.html":{}}}],["each",{"_index":49,"title":{},"body":{"classes/AppModule.html":{}}}],["encapsulates",{"_index":11,"title":{},"body":{"classes/AppModule.html":{}}}],["enlisting",{"_index":428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrypoint",{"_index":9,"title":{},"body":{"classes/AppModule.html":{}}}],["env",{"_index":280,"title":{},"body":{"miscellaneous/functions.html":{}}}],["env_file_path",{"_index":259,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["env_sample.json",{"_index":427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":153,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":160,"title":{},"body":{"classes/LogComponent.html":{}}}],["errors",{"_index":298,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":401,"title":{},"body":{"license.html":{}}}],["exist",{"_index":299,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":94,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["exported",{"_index":434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express",{"_index":12,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/SampleController.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["express.application",{"_index":53,"title":{},"body":{"classes/AppModule.html":{}}}],["express.request",{"_index":117,"title":{},"body":{"classes/AppModule.html":{}}}],["express.response",{"_index":119,"title":{},"body":{"classes/AppModule.html":{}}}],["express.static(path.join(__dirname",{"_index":122,"title":{},"body":{"classes/AppModule.html":{}}}],["extended",{"_index":103,"title":{},"body":{"classes/AppModule.html":{}}}],["extending",{"_index":311,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":291,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":24,"title":{},"body":{"classes/AppModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":336,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":397,"title":{},"body":{"license.html":{}}}],["folder",{"_index":342,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":382,"title":{},"body":{"license.html":{}}}],["format",{"_index":242,"title":{},"body":{"classes/SampleModule.html":{}}}],["framework",{"_index":236,"title":{},"body":{"classes/SampleModule.html":{}}}],["free",{"_index":356,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":177,"title":{},"body":{"classes/LogComponent.html":{},"classes/SampleController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":274,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":380,"title":{},"body":{"license.html":{}}}],["generic",{"_index":197,"title":{},"body":{"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["getting",{"_index":300,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":319,"title":{},"body":{"index.html":{}}}],["granted",{"_index":355,"title":{},"body":{"license.html":{}}}],["handler",{"_index":215,"title":{},"body":{"classes/SampleController.html":{}}}],["handles",{"_index":295,"title":{},"body":{"miscellaneous/functions.html":{}}}],["happy",{"_index":344,"title":{},"body":{"index.html":{}}}],["headers",{"_index":228,"title":{},"body":{"classes/SampleController.html":{}}}],["heart",{"_index":308,"title":{},"body":{"index.html":{}}}],["hello",{"_index":246,"title":{},"body":{"classes/SampleModule.html":{},"index.html":{}}}],["helper",{"_index":289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":198,"title":{},"body":{"classes/SampleController.html":{}}}],["hereby",{"_index":354,"title":{},"body":{"license.html":{}}}],["holders",{"_index":403,"title":{},"body":{"license.html":{}}}],["holding",{"_index":142,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["holds",{"_index":56,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["http",{"_index":87,"title":{},"body":{"classes/AppModule.html":{}}}],["http.server",{"_index":62,"title":{},"body":{"classes/AppModule.html":{}}}],["http://localhost:${process.env.port",{"_index":126,"title":{},"body":{"classes/AppModule.html":{}}}],["http://localhost:3000/api/sample",{"_index":333,"title":{},"body":{"index.html":{}}}],["https://github.com/epathak/node",{"_index":320,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":250,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":238,"title":{},"body":{"classes/SampleModule.html":{}}}],["implied",{"_index":393,"title":{},"body":{"license.html":{}}}],["import",{"_index":86,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["imported",{"_index":285,"title":{},"body":{"miscellaneous/functions.html":{}}}],["included",{"_index":387,"title":{},"body":{"license.html":{}}}],["includes",{"_index":309,"title":{},"body":{"index.html":{}}}],["including",{"_index":366,"title":{},"body":{"license.html":{}}}],["independent",{"_index":237,"title":{},"body":{"classes/SampleModule.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["initialisecontrollers",{"_index":32,"title":{},"body":{"classes/AppModule.html":{}}}],["initialisecontrollers(controllers",{"_index":65,"title":{},"body":{"classes/AppModule.html":{}}}],["initialiseenvironment",{"_index":265,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initialisemiddleware",{"_index":33,"title":{},"body":{"classes/AppModule.html":{}}}],["instance",{"_index":42,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"miscellaneous/variables.html":{}}}],["instantiates",{"_index":76,"title":{},"body":{"classes/AppModule.html":{}}}],["instructions(for",{"_index":314,"title":{},"body":{"index.html":{}}}],["interface",{"_index":133,"title":{"interfaces/Controller.html":{}},"body":{"interfaces/Controller.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":134,"title":{},"body":{"interfaces/Controller.html":{}}}],["isolating",{"_index":200,"title":{},"body":{"classes/SampleController.html":{}}}],["isused",{"_index":85,"title":{},"body":{"classes/AppModule.html":{}}}],["json",{"_index":284,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kind",{"_index":392,"title":{},"body":{"license.html":{}}}],["level",{"_index":150,"title":{},"body":{"classes/LogComponent.html":{}}}],["levels",{"_index":149,"title":{},"body":{"classes/LogComponent.html":{}}}],["liability",{"_index":407,"title":{},"body":{"license.html":{}}}],["liable",{"_index":404,"title":{},"body":{"license.html":{}}}],["license",{"_index":346,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":64,"title":{},"body":{"classes/AppModule.html":{}}}],["limit",{"_index":106,"title":{},"body":{"classes/AppModule.html":{}}}],["limitation",{"_index":367,"title":{},"body":{"license.html":{}}}],["limited",{"_index":394,"title":{},"body":{"license.html":{}}}],["link",{"_index":332,"title":{},"body":{"index.html":{}}}],["linux/mac",{"_index":330,"title":{},"body":{"index.html":{}}}],["listening",{"_index":78,"title":{},"body":{"classes/AppModule.html":{}}}],["loadenvfromjsonfile",{"_index":266,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadenvfromjsonfile(filepath",{"_index":286,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loads",{"_index":279,"title":{},"body":{"miscellaneous/functions.html":{}}}],["local",{"_index":281,"title":{},"body":{"miscellaneous/functions.html":{}}}],["located",{"_index":340,"title":{},"body":{"index.html":{}}}],["log",{"_index":89,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log(`route",{"_index":113,"title":{},"body":{"classes/AppModule.html":{}}}],["log(`the",{"_index":125,"title":{},"body":{"classes/AppModule.html":{}}}],["log(logmessage",{"_index":172,"title":{},"body":{"classes/LogComponent.html":{}}}],["logcomponent",{"_index":145,"title":{"classes/LogComponent.html":{}},"body":{"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logcomponent.log.bind(logcomponent",{"_index":432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logcomponent/log.module",{"_index":90,"title":{},"body":{"classes/AppModule.html":{}}}],["logger",{"_index":148,"title":{},"body":{"classes/LogComponent.html":{}}}],["logging",{"_index":169,"title":{},"body":{"classes/LogComponent.html":{}}}],["logic",{"_index":202,"title":{},"body":{"classes/SampleController.html":{}}}],["loglevels",{"_index":155,"title":{},"body":{"classes/LogComponent.html":{}}}],["logmessage",{"_index":183,"title":{},"body":{"classes/LogComponent.html":{}}}],["logtime",{"_index":174,"title":{},"body":{"classes/LogComponent.html":{}}}],["logtime=new",{"_index":190,"title":{},"body":{"classes/LogComponent.html":{}}}],["map",{"_index":196,"title":{},"body":{"classes/SampleController.html":{}}}],["mapped",{"_index":207,"title":{},"body":{"classes/SampleController.html":{}}}],["matching",{"_index":132,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":95,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["merchantability",{"_index":396,"title":{},"body":{"license.html":{}}}],["merge",{"_index":371,"title":{},"body":{"license.html":{}}}],["method",{"_index":214,"title":{},"body":{"classes/SampleController.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleModule.html":{}}}],["middleware",{"_index":74,"title":{},"body":{"classes/AppModule.html":{}}}],["miscellaneous",{"_index":273,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":347,"title":{},"body":{"license.html":{}}}],["models",{"_index":136,"title":{},"body":{"interfaces/Controller.html":{}}}],["modify",{"_index":370,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":343,"title":{},"body":{"index.html":{}}}],["modular",{"_index":306,"title":{},"body":{"index.html":{}}}],["module",{"_index":144,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module(sub",{"_index":140,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["modules",{"_index":179,"title":{"modules.html":{}},"body":{"classes/LogComponent.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":312,"title":{},"body":{"index.html":{}}}],["mount",{"_index":61,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["mounting",{"_index":16,"title":{},"body":{"classes/AppModule.html":{}}}],["mounts",{"_index":67,"title":{},"body":{"classes/AppModule.html":{}}}],["msgloglevel",{"_index":173,"title":{},"body":{"classes/LogComponent.html":{}}}],["msgloglevel='error",{"_index":189,"title":{},"body":{"classes/LogComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":339,"title":{},"body":{"index.html":{}}}],["new",{"_index":184,"title":{},"body":{"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":400,"title":{},"body":{"license.html":{}}}],["notice",{"_index":385,"title":{},"body":{"license.html":{}}}],["npm",{"_index":337,"title":{},"body":{"index.html":{}}}],["number",{"_index":244,"title":{},"body":{"classes/SampleModule.html":{}}}],["object",{"_index":141,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":359,"title":{},"body":{"license.html":{}}}],["oops.git",{"_index":321,"title":{},"body":{"index.html":{}}}],["oops/archive/refs/heads/main.zip",{"_index":324,"title":{},"body":{"index.html":{}}}],["open",{"_index":331,"title":{},"body":{"index.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["oriented",{"_index":305,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":412,"title":{},"body":{"license.html":{}}}],["out",{"_index":414,"title":{},"body":{"license.html":{}}}],["overview",{"_index":417,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":270,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":96,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["parseexpressrequest",{"_index":262,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseexpressrequest(req",{"_index":221,"title":{},"body":{"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":398,"title":{},"body":{"license.html":{}}}],["path",{"_index":29,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pathak",{"_index":352,"title":{},"body":{"license.html":{}}}],["permission",{"_index":353,"title":{},"body":{"license.html":{}}}],["permit",{"_index":378,"title":{},"body":{"license.html":{}}}],["person",{"_index":358,"title":{},"body":{"license.html":{}}}],["persons",{"_index":379,"title":{},"body":{"license.html":{}}}],["point",{"_index":425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":389,"title":{},"body":{"license.html":{}}}],["preparing",{"_index":278,"title":{},"body":{"miscellaneous/functions.html":{}}}],["primarily",{"_index":81,"title":{},"body":{"classes/AppModule.html":{}}}],["primary",{"_index":176,"title":{},"body":{"classes/LogComponent.html":{}}}],["private",{"_index":27,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["process.env.log_level",{"_index":187,"title":{},"body":{"classes/LogComponent.html":{}}}],["properties",{"_index":26,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{}}}],["provided",{"_index":390,"title":{},"body":{"license.html":{}}}],["provides",{"_index":19,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":310,"title":{},"body":{"index.html":{}}}],["public",{"_index":203,"title":{},"body":{"classes/SampleController.html":{}}}],["publish",{"_index":372,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":399,"title":{},"body":{"license.html":{}}}],["query",{"_index":231,"title":{},"body":{"classes/SampleController.html":{}}}],["read",{"_index":296,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reading",{"_index":290,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":28,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["reads",{"_index":287,"title":{},"body":{"miscellaneous/functions.html":{}}}],["registered",{"_index":114,"title":{},"body":{"classes/AppModule.html":{}}}],["related",{"_index":297,"title":{},"body":{"miscellaneous/functions.html":{}}}],["repo",{"_index":317,"title":{},"body":{"index.html":{}}}],["req",{"_index":116,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["req.body",{"_index":234,"title":{},"body":{"classes/SampleController.html":{}}}],["req.headers",{"_index":229,"title":{},"body":{"classes/SampleController.html":{}}}],["req.params",{"_index":230,"title":{},"body":{"classes/SampleController.html":{}}}],["req.query",{"_index":232,"title":{},"body":{"classes/SampleController.html":{}}}],["request",{"_index":209,"title":{},"body":{"classes/SampleController.html":{},"miscellaneous/functions.html":{}}}],["requestdetails",{"_index":220,"title":{},"body":{"classes/SampleController.html":{}}}],["requests",{"_index":79,"title":{},"body":{"classes/AppModule.html":{}}}],["res",{"_index":118,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleController.html":{}}}],["res.status(200).end",{"_index":120,"title":{},"body":{"classes/AppModule.html":{}}}],["res.status(status).send(data",{"_index":226,"title":{},"body":{"classes/SampleController.html":{}}}],["resilience",{"_index":293,"title":{},"body":{"miscellaneous/functions.html":{}}}],["response",{"_index":210,"title":{},"body":{"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["restriction",{"_index":365,"title":{},"body":{"license.html":{}}}],["result",{"_index":241,"title":{},"body":{"classes/SampleModule.html":{}}}],["results",{"_index":131,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["returns",{"_index":70,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":368,"title":{},"body":{"license.html":{}}}],["root",{"_index":139,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["route",{"_index":52,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleController.html":{}}}],["router",{"_index":138,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["routes",{"_index":18,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/SampleController.html":{}}}],["run",{"_index":326,"title":{},"body":{"index.html":{}}}],["running",{"_index":315,"title":{},"body":{"index.html":{}}}],["safereadjsonfile",{"_index":267,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["safereadjsonfile(filepath",{"_index":292,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sample",{"_index":194,"title":{},"body":{"classes/SampleController.html":{},"index.html":{}}}],["sample.module",{"_index":211,"title":{},"body":{"classes/SampleController.html":{}}}],["samplecontroller",{"_index":192,"title":{"classes/SampleController.html":{}},"body":{"classes/SampleController.html":{},"coverage.html":{}}}],["samplecontroller(new",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["samplemodule",{"_index":205,"title":{"classes/SampleModule.html":{}},"body":{"classes/SampleController.html":{},"classes/SampleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["samplemodule.sayhelloworld",{"_index":216,"title":{},"body":{"classes/SampleController.html":{}}}],["sayhelloworld",{"_index":239,"title":{},"body":{"classes/SampleModule.html":{}}}],["see",{"_index":335,"title":{},"body":{"index.html":{}}}],["sell",{"_index":376,"title":{},"body":{"license.html":{}}}],["sensible",{"_index":181,"title":{},"body":{"classes/LogComponent.html":{}}}],["server",{"_index":30,"title":{},"body":{"classes/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server(instance",{"_index":440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":143,"title":{},"body":{"interfaces/Controller.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["serving",{"_index":22,"title":{},"body":{"classes/AppModule.html":{}}}],["set",{"_index":162,"title":{},"body":{"classes/LogComponent.html":{},"classes/SampleController.html":{}}}],["shall",{"_index":386,"title":{},"body":{"license.html":{}}}],["single",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["singleton(single",{"_index":436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":361,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"index.html":{}}}],["specifics",{"_index":14,"title":{},"body":{"classes/AppModule.html":{}}}],["src",{"_index":341,"title":{},"body":{"index.html":{}}}],["src/.../app.controllers.ts",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../config.ts",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.module.ts",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../sample.controller.ts",{"_index":276,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../server.ts",{"_index":275,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/appcomponent/app.controllers.ts",{"_index":252,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/appcomponent/app.models.ts",{"_index":135,"title":{},"body":{"interfaces/Controller.html":{},"coverage.html":{}}}],["src/appcomponent/app.module.ts",{"_index":6,"title":{},"body":{"classes/AppModule.html":{},"coverage.html":{}}}],["src/appcomponent/app.module.ts:22",{"_index":54,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:29",{"_index":59,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:36",{"_index":40,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:55",{"_index":72,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:65",{"_index":66,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:82",{"_index":75,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:94",{"_index":80,"title":{},"body":{"classes/AppModule.html":{}}}],["src/config.ts",{"_index":258,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logcomponent/log.module.ts",{"_index":146,"title":{},"body":{"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logcomponent/log.module.ts:13",{"_index":166,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/logcomponent/log.module.ts:19",{"_index":161,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/logcomponent/log.module.ts:25",{"_index":157,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/logcomponent/log.module.ts:42",{"_index":175,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/samplecomponent/sample.controller.ts",{"_index":193,"title":{},"body":{"classes/SampleController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/samplecomponent/sample.controller.ts:16",{"_index":208,"title":{},"body":{"classes/SampleController.html":{}}}],["src/samplecomponent/sample.controller.ts:22",{"_index":206,"title":{},"body":{"classes/SampleController.html":{}}}],["src/samplecomponent/sample.module.ts",{"_index":235,"title":{},"body":{"classes/SampleModule.html":{},"coverage.html":{}}}],["src/samplecomponent/sample.module.ts:13",{"_index":240,"title":{},"body":{"classes/SampleModule.html":{}}}],["src/server.ts",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":73,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleModule.html":{}}}],["start",{"_index":34,"title":{},"body":{"classes/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start.bat",{"_index":327,"title":{},"body":{"index.html":{}}}],["start.sh",{"_index":329,"title":{},"body":{"index.html":{}}}],["started",{"_index":301,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":303,"title":{},"body":{"index.html":{}}}],["statements",{"_index":251,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":23,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/variables.html":{}}}],["static_files_path",{"_index":91,"title":{},"body":{"classes/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":222,"title":{},"body":{"classes/SampleController.html":{},"classes/SampleModule.html":{}}}],["stop",{"_index":35,"title":{},"body":{"classes/AppModule.html":{}}}],["string",{"_index":58,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"classes/SampleModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":307,"title":{},"body":{"index.html":{}}}],["sub",{"_index":137,"title":{},"body":{"interfaces/Controller.html":{},"miscellaneous/variables.html":{}}}],["subapp(sub",{"_index":51,"title":{},"body":{"classes/AppModule.html":{}}}],["subject",{"_index":381,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":374,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":388,"title":{},"body":{"license.html":{}}}],["support",{"_index":21,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["syntax",{"_index":294,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sysloglevel",{"_index":156,"title":{},"body":{"classes/LogComponent.html":{}}}],["system",{"_index":167,"title":{},"body":{"classes/LogComponent.html":{}}}],["table",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["tejas",{"_index":351,"title":{},"body":{"license.html":{}}}],["template",{"_index":304,"title":{},"body":{"index.html":{}}}],["testing",{"_index":84,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app",{"_index":97,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.get('/health",{"_index":115,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.listen(process.env.port",{"_index":124,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use",{"_index":121,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(compression",{"_index":101,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(express.json",{"_index":105,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(express.urlencoded",{"_index":102,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(route",{"_index":111,"title":{},"body":{"classes/AppModule.html":{}}}],["this.defaultloglevel",{"_index":188,"title":{},"body":{"classes/LogComponent.html":{}}}],["this.initialisecontrollers(controllers",{"_index":100,"title":{},"body":{"classes/AppModule.html":{}}}],["this.initialisemiddleware",{"_index":99,"title":{},"body":{"classes/AppModule.html":{}}}],["this.loglevels.indexof(msgloglevel",{"_index":191,"title":{},"body":{"classes/LogComponent.html":{}}}],["this.path",{"_index":98,"title":{},"body":{"classes/AppModule.html":{},"classes/SampleController.html":{}}}],["this.path}${controller.path",{"_index":110,"title":{},"body":{"classes/AppModule.html":{}}}],["this.router",{"_index":212,"title":{},"body":{"classes/SampleController.html":{}}}],["this.server",{"_index":123,"title":{},"body":{"classes/AppModule.html":{}}}],["this.server.close",{"_index":130,"title":{},"body":{"classes/AppModule.html":{}}}],["this.sysloglevel",{"_index":186,"title":{},"body":{"classes/LogComponent.html":{}}}],["through",{"_index":63,"title":{},"body":{"classes/AppModule.html":{}}}],["tort",{"_index":411,"title":{},"body":{"license.html":{}}}],["trace",{"_index":165,"title":{},"body":{"classes/LogComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AppModule.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"classes/SampleController.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":302,"title":{},"body":{"index.html":{}}}],["unzip",{"_index":325,"title":{},"body":{"index.html":{}}}],["usage",{"_index":313,"title":{},"body":{"index.html":{}}}],["use",{"_index":369,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":82,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":180,"title":{},"body":{"classes/LogComponent.html":{},"classes/SampleController.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["using",{"_index":283,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":159,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":55,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":288,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":152,"title":{},"body":{"classes/LogComponent.html":{}}}],["void",{"_index":71,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["warn",{"_index":163,"title":{},"body":{"classes/LogComponent.html":{}}}],["warranties",{"_index":395,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":391,"title":{},"body":{"license.html":{}}}],["well",{"_index":10,"title":{},"body":{"classes/AppModule.html":{}}}],["whether",{"_index":408,"title":{},"body":{"license.html":{}}}],["windows",{"_index":328,"title":{},"body":{"index.html":{}}}],["within",{"_index":170,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":364,"title":{},"body":{"license.html":{}}}],["world",{"_index":247,"title":{},"body":{"classes/SampleModule.html":{},"index.html":{}}}],["zip",{"_index":323,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AppModule.html":{"url":"classes/AppModule.html","title":"class - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appComponent/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The AppModule acts as an entrypoint as well as encapsulates express app specifics.\nApart from mounting api routes also provides basic support for serving static files.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                app\n                            \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseControllers\n                            \n                            \n                                initialiseMiddleware\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(controllers: Controller[])\n                    \n                \n                        \n                            \n                                Defined in src/appComponent/app.module.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppModule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        controllers\n                                                  \n                                                        \n                                                                        Controller[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Each controller contains a subapp(sub route)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :     express.Application\n\n                    \n                \n                    \n                        \n                                Defined in src/appComponent/app.module.ts:22\n                        \n                    \n\n            \n                \n                    The variable that holds the express application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/appComponent/app.module.ts:29\n                        \n                    \n\n            \n                \n                    The variable that holds the base mount path for api routes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     http.Server\n\n                    \n                \n                    \n                        \n                                Defined in src/appComponent/app.module.ts:36\n                        \n                    \n\n            \n                \n                    The variable that holds the instance of application through its lifecycle.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialiseControllers\n                        \n                    \n                \n            \n            \n                \ninitialiseControllers(controllers: Controller[])\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:65\n                \n            \n\n\n            \n                \n                    Does what it says, mounts controllers(sub-applications).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controllers\n                                    \n                                                Controller[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialiseMiddleware\n                        \n                    \n                \n            \n            \n                \ninitialiseMiddleware()\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:55\n                \n            \n\n\n            \n                \n                    Does what it says, mounts standard middleware.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:82\n                \n            \n\n\n            \n                \n                    Instantiates the server and begins listening for requests.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        instance of app\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:94\n                \n            \n\n\n            \n                \n                    Primarily used during testing, isused to stop server.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        instance of app\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as http from 'http';\nimport * as path from 'path';\nimport express from 'express';\nimport compression from 'compression';\nimport { log } from '../logComponent/log.module';\nimport { STATIC_FILES_PATH } from '../config';\nimport { Controller } from './app.models';\n\n/**\n * The AppModule acts as an entrypoint as well as encapsulates express app specifics.\n * Apart from mounting api routes also provides basic support for serving static files.\n * @export\n * @class AppModule\n */\nexport class AppModule {\n  /**\n   * The variable that holds the express application.\n   * @private\n   * @type {express.Application}\n   * @memberof AppModule\n   */\n  private readonly app: express.Application;\n  /**\n   * The variable that holds the base mount path for api routes.\n   * @private\n   * @type {string}\n   * @memberof AppModule\n   */\n  private readonly path: string;\n  /**\n   * The variable that holds the instance of application through its lifecycle.\n   * @private\n   * @type {http.Server}\n   * @memberof AppModule\n   */\n  private server!: http.Server;\n\n  /**\n   * Creates an instance of AppModule.\n   * @param {Controller[]} controllers Each controller contains a subapp(sub route)\n   * @memberof AppModule\n   */\n  constructor(controllers: Controller[]) {\n    this.app = express();\n    this.path = '/api';\n\n    this.initialiseMiddleware();\n    this.initialiseControllers(controllers)\n  }\n\n  /**\n   * Does what it says, mounts standard middleware.\n   * @memberof AppModule\n   */\n  initialiseMiddleware() {\n    this.app.use(compression());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(express.json({ limit: '32mb' }));\n  }\n\n  /**\n   * Does what it says, mounts controllers(sub-applications).\n   * @memberof AppModule\n   */\n  initialiseControllers(controllers: Controller[]) {\n    controllers.forEach((controller: Controller) => {\n      const route = `${this.path}${controller.path}`;\n\n      this.app.use(route, controller.router);\n      log(`Route registered: ${route}`, 'INFO');\n    })\n\n    this.app.get('/health', (req: express.Request, res: express.Response) => res.status(200).end());\n    this.app.use('/', express.static(path.join(__dirname, '..', '..', STATIC_FILES_PATH)));\n  }\n\n  /**\n   * Instantiates the server and begins listening for requests.\n   * @returns instance of app\n   * @memberof AppModule\n   */\n  start() {\n    this.server = this.app.listen(process.env.PORT, () => {\n      log(`The server is listening @ http://localhost:${process.env.PORT}`);\n    });\n    return this.server;\n  }\n\n  /**\n   * Primarily used during testing, isused to stop server.\n   * @returns instance of app\n   * @memberof AppModule\n   */\n  stop() {\n    log(`The server is being closed...`);\n    return this.server.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Controller.html":{"url":"interfaces/Controller.html","title":"interface - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appComponent/app.models.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface which models a controller for all sub-applications.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            router\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The root mount path for all the routes of the module(sub-application)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        router:         Router\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Router\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The router object for holding all the routes to services of the module.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Router } from \"express\";\n\n/**\n * The interface which models a controller for all sub-applications.\n * @export\n * @interface Controller\n */\nexport interface Controller{\n  /**\n   * The root mount path for all the routes of the module(sub-application)\n   * @type {string}\n   * @memberof Controller\n   */\n  path: string;\n  /**\n   * The router object for holding all the routes to services of the module.\n   * @type {Router}\n   * @memberof Controller\n   */\n  router: Router;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogComponent.html":{"url":"classes/LogComponent.html","title":"class - LogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logComponent/log.module.ts\n        \n\n\n            \n                Description\n            \n            \n                A custom logger with basic support for log levels.\nLog level is also configurable via an environment variable.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultLogLevel\n                            \n                            \n                                    Private\n                                    Readonly\n                                logLevels\n                            \n                            \n                                    Private\n                                    Readonly\n                                sysLogLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/logComponent/log.module.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of LogComponent.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultLogLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/logComponent/log.module.ts:19\n                        \n                    \n\n            \n                \n                    A log level to be used by default if not set via environment variable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['ERROR', 'WARN', 'INFO', 'DEBUG', 'TRACE']\n                    \n                \n                    \n                        \n                                Defined in src/logComponent/log.module.ts:13\n                        \n                    \n\n            \n                \n                    The default system log levels available for logging within application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sysLogLevel\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/logComponent/log.module.ts:25\n                        \n                    \n\n            \n                \n                    A variable that holds the configured system log level.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(logMessage: string, msgLogLevel: string, logTime)\n                \n            \n\n\n            \n                \n                    Defined in src/logComponent/log.module.ts:42\n                \n            \n\n\n            \n                \n                    Primary logging function to be called from other modules, uses sensible defaults.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    logMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    msgLogLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ERROR'\n                                    \n\n                                \n                                \n                                    logTime\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        new Date().toISOString()\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export default class LogComponent {\n  /**\n   * The default system log levels available for logging within application.\n   * @private\n   * @memberof LogComponent\n   */\n  private readonly logLevels = ['ERROR', 'WARN', 'INFO', 'DEBUG', 'TRACE'];\n  /**\n   * A log level to be used by default if not set via environment variable.\n   * @private\n   * @memberof LogComponent\n   */\n  private readonly defaultLogLevel = 'ERROR';\n  /**\n   * A variable that holds the configured system log level.\n   * @private\n   * @memberof LogComponent\n   */\n  private readonly sysLogLevel;\n\n  /**\n   *Creates an instance of LogComponent.\n   * @memberof LogComponent\n   */\n  constructor() {\n    this.sysLogLevel = process.env.LOG_LEVEL || this.defaultLogLevel;\n  }\n\n  /**\n   * Primary logging function to be called from other modules, uses sensible defaults.\n   * @param {string} logMessage\n   * @param {string} [msgLogLevel='ERROR']\n   * @param {*} [logTime=new Date().toISOString()]\n   * @memberof LogComponent\n   */\n  log(logMessage: string, msgLogLevel = 'ERROR', logTime = new Date().toISOString()) {\n    if (this.logLevels.indexOf(msgLogLevel) \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleController.html":{"url":"classes/SampleController.html","title":"class - SampleController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sampleComponent/sample.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                This sample controller uses a route configuration to map routes to services.\nSample module is generic here, and has no dependencies on express, isolating buisness logic.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sampleModule: SampleModule)\n                    \n                \n                        \n                            \n                                Defined in src/sampleComponent/sample.controller.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of SampleController.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        sampleModule\n                                                  \n                                                        \n                                                                        SampleModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Set of services which can be mapped to routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/sampleComponent/sample.controller.ts:16\n                        \n                    \n\n            \n                \n                    The root mount path for all the routes of the module(sub-application)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/sampleComponent/sample.controller.ts:22\n                        \n                    \n\n            \n                \n                    The router object for holding all the routes to services of the module.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Router, Request, Response } from \"express\";\nimport { SampleModule } from \"./sample.module\";\n\n/**\n * This sample controller uses a route configuration to map routes to services.\n * Sample module is generic here, and has no dependencies on express, isolating buisness logic.\n * @export\n * @class SampleController\n */\nexport class SampleController {\n  /**\n   * The root mount path for all the routes of the module(sub-application)\n   * @type {string}\n   * @memberof SampleController\n   */\n  public path: string;\n  /**\n   * The router object for holding all the routes to services of the module.\n   * @type {Router}\n   * @memberof SampleController\n   */\n  public router: Router;\n\n  /**\n   * Creates an instance of SampleController.\n   * @param {SampleModule} sampleModule Set of services which can be mapped to routes.\n   * @memberof SampleController\n   */\n  constructor(sampleModule: SampleModule) {\n    this.path = '/sample';\n    this.router = Router();\n\n    const configs = [\n      { method: 'get', route: '/', handler: sampleModule.sayHelloWorld }\n    ];\n\n    configs.forEach((config: any) => {\n      (this.router as any)[config.method](config.route, async (req: Request, res: Response) => {\n        const requestDetails = parseExpressRequest(req);\n        const { status, data } = await config.handler(requestDetails);\n        res.status(status).send(data);\n      })\n    })\n  }\n}\n\n/**\n * This function converts an express request into a generic object.\n * @param {Request} req\n * @returns\n */\nfunction parseExpressRequest(req: Request) {\n  return {\n    headers: req.headers,\n    path: req.params,\n    query: req.query,\n    body: req.body\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SampleModule.html":{"url":"classes/SampleModule.html","title":"class - SampleModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SampleModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/sampleComponent/sample.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Framework independent implementation of services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sayHelloWorld\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        sayHelloWorld\n                        \n                    \n                \n            \n            \n                \nsayHelloWorld()\n                \n            \n\n\n            \n                \n                    Defined in src/sampleComponent/sample.module.ts:13\n                \n            \n\n\n            \n                \n                    Returns result in standard api response format: status-code and data.\n\n\n                    \n                    \n                    \n                        Returns :     { status: number; data: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class SampleModule {\n\n  /**\n   * Returns result in standard api response format: status-code and data.\n   * @returns\n   * @memberof SampleModule\n   */\n  sayHelloWorld() {\n    return { status: 200, data: 'Hello World!' };\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/appComponent/app.controllers.ts\n            \n            variable\n            appControllers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/appComponent/app.models.ts\n            \n            interface\n            Controller\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/appComponent/app.module.ts\n            \n            class\n            AppModule\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            ENV_FILE_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            STATIC_FILES_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/logComponent/log.module.ts\n            \n            class\n            LogComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/logComponent/log.module.ts\n            \n            variable\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/logComponent/log.module.ts\n            \n            variable\n            logComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sampleComponent/sample.controller.ts\n            \n            class\n            SampleController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/sampleComponent/sample.controller.ts\n            \n            function\n            parseExpressRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/sampleComponent/sample.module.ts\n            \n            class\n            SampleModule\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            initialiseEnvironment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            loadEnvFromJsonFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            safeReadJsonFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            variable\n            server\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            compression : ^1.7.4\n        \n            express : ^4.17.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            initialiseEnvironment   (src/.../server.ts)\n                        \n                        \n                            loadEnvFromJsonFile   (src/.../server.ts)\n                        \n                        \n                            parseExpressRequest   (src/.../sample.controller.ts)\n                        \n                        \n                            safeReadJsonFile   (src/.../server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialiseEnvironment\n                        \n                    \n                \n            \n            \n                \ninitialiseEnvironment()\n                \n            \n\n\n\n\n            \n                \n                    This function acts as a bootstrapper for preparing environment for application.\nAlso loads the env for local development using json file path imported from config file.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadEnvFromJsonFile\n                        \n                    \n                \n            \n            \n                \nloadEnvFromJsonFile(filePath: string)\n                \n            \n\n\n\n\n            \n                \n                    Reads the JSON from file and loads its variables in the environment.\nUses a helper function for reading JSON file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path of the environment file.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeReadJsonFile\n                        \n                    \n                \n            \n            \n                \nsafeReadJsonFile(filePath: string)\n                \n            \n\n\n\n\n            \n                \n                    This function provides resilience if a file is not in JSON syntax.\nAlso handles the file read related errors like \"file does not exist\".\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/sampleComponent/sample.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseExpressRequest\n                        \n                    \n                \n            \n            \n                \nparseExpressRequest(req: Request)\n                \n            \n\n\n\n\n            \n                \n                    This function converts an express request into a generic object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nA typescript starter template that uses object oriented, modular structure at heart.\nIncludes a sample module providing structure for extending the template with more modules.\nUsage Instructions(for running the sample)\n\nClone the repo with command: git clone https://github.com/epathak/node-typescript-oops.git.\n\nOR Download as a zip: https://github.com/epathak/node-typescript-oops/archive/refs/heads/main.zip and unzip it.\n\nThen run command: start.bat on Windows or start.sh on Linux/Mac.\n\nOpen the link: http://localhost:3000/api/sample in browser to see \"Hello World!\" from sample module.\n\n\nUsage Instructions(for development)\n\nClone the repo with command: git clone https://github.com/epathak/node-typescript-oops.git.\n\nOR Download as a zip: https://github.com/epathak/node-typescript-oops/archive/refs/heads/main.zip and unzip it.\n\nFor first run: npm run build & npm run start or npm run debug as needed.\n\nThe source files are located in src folder, start modifying and happy coding!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Tejas Pathak\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appControllers   (src/.../app.controllers.ts)\n                        \n                        \n                            ENV_FILE_PATH   (src/.../config.ts)\n                        \n                        \n                            log   (src/.../log.module.ts)\n                        \n                        \n                            logComponent   (src/.../log.module.ts)\n                        \n                        \n                            server   (src/.../server.ts)\n                        \n                        \n                            STATIC_FILES_PATH   (src/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/appComponent/app.controllers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appControllers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Controller[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  new SampleController(new SampleModule())\n]\n                    \n                \n\n            \n                \n                    A single point for defining all sub-applications.\n\n                \n            \n\n        \n    \n\n    src/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV_FILE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'env_sample.json'\n                    \n                \n\n            \n                \n                    A single file enlisting all the configuration used within the application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATIC_FILES_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'documentation'\n                    \n                \n\n            \n                \n                    The variable for configuring the path of folder containing the static files for frontend.\n\n                \n            \n\n        \n    \n\n    src/logComponent/log.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : logComponent.log.bind(logComponent)\n                    \n                \n\n            \n                \n                    The instance of log component's log function which is exported for use in other modules\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LogComponent()\n                    \n                \n\n            \n                \n                    The instance of log component which is used like singleton(single object is created ever)\n\n                \n            \n\n        \n    \n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AppModule(appControllers)\n                    \n                \n\n            \n                \n                    Create and start the server(instance of application module).\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AppModule.html",[0,0.554,1,1.614]],["body/classes/AppModule.html",[0,0.449,1,2.77,2,0.572,3,0.653,4,0.339,5,0.226,6,0.994,7,0.545,8,1.599,9,2.039,10,2.039,11,2.039,12,1.373,13,3.871,14,2.039,15,2.039,16,2.039,17,1.449,18,1.882,19,1.599,20,1.599,21,1.599,22,2.039,23,1.599,24,1.093,25,0.226,26,0.776,27,3.244,28,2.691,29,1.627,30,2.486,31,1.309,32,2.039,33,2.931,34,1.882,35,3.431,36,0.68,37,2.039,38,1.545,39,2.01,40,2.039,41,1.093,42,1.692,43,0.92,44,0.068,45,0.92,46,0.667,47,0.92,48,2.558,49,2.039,50,2.039,51,2.039,52,2.299,53,2.558,54,1.268,55,1.839,56,2.691,57,1.115,58,0.563,59,1.268,60,2.039,61,1.309,62,2.558,63,2.039,64,2.039,65,2.039,66,1.268,67,2.931,68,2.039,69,1.309,70,1.548,71,1.309,72,1.268,73,1.599,74,2.039,75,1.268,76,2.039,77,2.039,78,2.558,79,2.039,80,1.268,81,2.039,82,1.309,83,2.039,84,2.039,85,2.039,86,1.933,87,2.039,88,1.599,89,0.68,90,1.268,91,1.309,92,0.994,93,1.268,94,0.653,95,1.692,96,0.68,97,1.268,98,0.994,99,1.268,100,1.268,101,1.268,102,1.268,103,1.268,104,1.268,105,1.268,106,1.268,107,1.268,108,1.268,109,0.814,110,1.268,111,1.268,112,1.268,113,1.268,114,1.268,115,1.268,116,0.814,117,1.268,118,0.994,119,1.268,120,1.268,121,1.268,122,1.268,123,2.039,124,1.268,125,2.039,126,1.268,127,1.309,128,1.268,129,1.268,130,1.268,131,0.027,132,0.027]],["title/classes/BmiController.html",[0,0.554,133,1.614]],["body/classes/BmiController.html",[0,0.579,2,0.793,3,0.563,4,0.47,5,0.313,7,0.703,12,1.423,18,2.685,25,0.313,26,1.001,29,1.771,36,0.943,38,1.001,39,1.688,41,1.409,42,1.186,43,0.793,44,0.068,45,0.793,46,0.666,47,0.793,52,2.47,57,1.001,58,0.694,61,1.688,70,0.793,86,1.409,94,0.842,95,1.421,96,1.409,98,1.379,109,2.022,116,1.688,118,1.379,127,1.129,131,0.035,132,0.035,133,2.685,134,1.129,135,1.421,136,1.409,137,2.062,138,2.63,139,2.52,140,2.062,141,1.873,142,2.47,143,2.63,144,1.688,145,2.63,146,2.63,147,2.63,148,3.925,149,3.414,150,2.63,151,1.835,152,2.63,153,2.062,154,2.63,155,1.759,156,2.062,157,2.062,158,1.421,159,2.062,160,2.47,161,1.379,162,1.759,163,2.63,164,1.759,165,1.759,166,1.759,167,1.759,168,1.759,169,1.759,170,1.759,171,1.759,172,1.759,173,2.062,174,1.379,175,1.379,176,1.759,177,1.759,178,1.759,179,1.001,180,1.379,181,1.759,182,1.759,183,1.759,184,1.759,185,1.759,186,1.759,187,1.759]],["title/interfaces/BmiInput.html",[188,0.805,189,1.134]],["body/interfaces/BmiInput.html",[3,0.915,4,0.764,5,0.509,7,0.764,17,1.665,25,0.509,26,1.405,44,0.066,46,0.727,58,1.009,94,1.309,131,0.05,132,0.05,135,1.29,188,1.309,189,1.665,190,1.532,191,1.836,192,2.895,193,2.859,194,2.37,195,3.508,196,3.508,197,3.508,198,2.557,199,2.242,200,1.665,201,1.836,202,1.836]],["title/classes/BmiModule.html",[0,0.554,151,1.134]],["body/classes/BmiModule.html",[0,0.608,2,0.847,3,0.601,4,0.502,5,0.334,7,0.502,17,1.245,25,0.334,31,1.772,36,1.754,39,1.479,41,1.479,42,1.245,43,1.245,44,0.068,45,0.847,46,0.334,47,0.847,58,0.608,70,1.923,73,2.164,86,1.006,94,0.883,95,1.245,96,1.754,109,2.101,127,2.101,131,0.037,132,0.037,135,2.067,139,1.772,151,1.874,161,2.164,174,2.829,175,2.829,179,1.373,189,1.245,194,1.205,198,2.154,200,0.847,201,2.101,202,2.101,203,1.205,204,2.76,205,2.76,206,2.76,207,2.76,208,1.877,209,2.76,210,1.877,211,3.608,212,2.76,213,2.76,214,1.877,215,1.877,216,1.877,217,1.877,218,1.877,219,1.472,220,2.164,221,1.877,222,2.164,223,1.772,224,2.164,225,2.164,226,2.164,227,2.164,228,2.164,229,2.164,230,2.164,231,1.877,232,1.877,233,1.877,234,1.472,235,1.877,236,1.472,237,1.877,238,1.877]],["title/interfaces/BmiOutput.html",[188,0.805,200,1.134]],["body/interfaces/BmiOutput.html",[3,0.852,4,0.711,5,0.474,7,0.711,17,1.589,25,0.474,26,1.341,44,0.066,46,0.799,58,1.047,94,1.264,131,0.047,132,0.047,135,1.896,188,1.264,189,1.201,190,1.426,191,1.709,192,2.762,194,2.262,195,3.428,196,3.428,197,3.428,198,2.567,199,2.762,200,1.781,201,2.698,202,2.698]],["title/interfaces/Controller.html",[38,0.957,188,0.805]],["body/interfaces/Controller.html",[3,0.849,4,0.709,5,0.472,7,0.709,12,1.009,18,2.695,25,0.472,26,1.338,29,2.024,38,1.742,44,0.067,46,0.747,57,1.338,58,0.924,61,2.257,69,2.257,86,1.422,94,1.125,95,1.586,131,0.047,132,0.047,139,2.257,141,1.884,149,3.755,156,2.756,157,2.756,158,1.586,159,2.756,188,1.343,190,1.422,239,2.08,240,3.515,241,2.756]],["title/classes/LogComponent.html",[0,0.554,242,1.347]],["body/classes/LogComponent.html",[0,0.387,2,0.793,3,1.008,4,0.47,5,0.313,7,0.47,20,1.379,21,1.379,25,0.313,26,1.001,27,3.51,28,3.353,31,1.688,36,1.688,39,2.005,41,1.409,42,1.186,43,0.793,44,0.067,45,0.793,46,0.56,47,0.793,55,2.005,56,2.062,57,1.001,58,0.921,70,0.793,71,1.129,82,1.688,89,2.333,94,0.563,95,1.687,96,1.688,131,0.035,132,0.035,136,1.409,153,2.062,179,1.001,242,2.291,243,1.129,244,1.759,245,1.759,246,3.149,247,3.741,248,1.759,249,3.149,250,2.47,251,3.149,252,3.149,253,3.149,254,2.63,255,3.28,256,2.47,257,3.925,258,1.759,259,2.63,260,2.062,261,2.63,262,1.759,263,3.495,264,2.63,265,3.495,266,2.062,267,2.63,268,2.63,269,3.149,270,3.149,271,1.759,272,2.63,273,2.63,274,1.186,275,2.63,276,2.63,277,2.63,278,1.688,279,3.149,280,1.759,281,1.759,282,1.759,283,1.759,284,1.759,285,1.759]],["title/coverage.html",[286,2.659]],["body/coverage.html",[0,0.894,1,1.569,5,0.435,6,1.917,30,1.569,38,0.93,44,0.066,46,0.435,55,2.348,89,1.31,91,1.569,131,0.045,132,0.045,133,1.569,134,2.136,151,1.103,179,1.668,188,1.211,189,1.103,191,2.136,200,1.103,203,2.428,219,3.829,236,1.917,239,1.917,242,1.783,243,2.428,278,1.569,286,1.917,287,1.569,288,2.444,289,2.444,290,1.917,291,1.917,292,4.759,293,3.327,294,2.444,295,2.444,296,1.917,297,2.444,298,2.444,299,2.444,300,1.917,301,1.917,302,2.609,303,1.917,304,2.444,305,2.607,306,1.917,307,1.917,308,1.917,309,2.444,310,2.444]],["title/dependencies.html",[144,1.934,311,2.119]],["body/dependencies.html",[12,1.432,44,0.064,88,2.951,131,0.059,132,0.059,144,2.416,312,3.764,313,3.764]],["title/miscellaneous/functions.html",[314,1.136,315,2.363]],["body/miscellaneous/functions.html",[5,0.791,7,0.587,8,1.724,12,0.837,19,1.724,25,0.391,29,1.395,43,1.913,44,0.063,45,1.844,46,0.728,47,1.844,57,0.837,58,0.9,70,1.965,71,1.985,92,1.724,116,1.412,131,0.041,132,0.041,134,1.412,135,1.613,136,1.178,142,1.724,158,0.992,160,1.724,173,1.724,179,1.614,180,1.724,198,2.334,203,1.412,220,1.724,222,2.425,223,1.985,224,2.425,225,2.425,226,2.425,227,2.425,228,2.425,229,1.724,230,2.425,234,2.425,250,2.804,296,2.425,300,2.425,301,2.425,305,1.412,306,2.804,307,2.425,308,2.425,314,1.178,315,1.724,316,3.092,317,2.804,318,2.199,319,2.199,320,2.199,321,2.199,322,3.092,323,2.199,324,2.199,325,1.724,326,2.199,327,3.88,328,2.199,329,2.199,330,2.199,331,1.412,332,2.199,333,2.199,334,3.092,335,2.199,336,2.199,337,2.199,338,2.199,339,2.199,340,2.199,341,2.199]],["title/index.html",[25,0.377,342,1.662,343,1.662]],["body/index.html",[4,0.728,17,1.229,24,1.46,34,2.297,44,0.054,131,0.054,132,0.048,136,1.46,140,2.136,141,1.46,158,1.229,260,2.136,274,1.229,325,2.136,344,2.724,345,2.724,346,3.577,347,2.724,348,2.724,349,3.577,350,2.724,351,2.724,352,2.724,353,2.724,354,2.724,355,3.577,356,3.577,357,2.724,358,2.724,359,4.241,360,3.577,361,3.994,362,3.577,363,4.241,364,4.241,365,3.577,366,3.577,367,3.577,368,3.577,369,3.577,370,4.405,371,2.724,372,2.724,373,2.724,374,2.724,375,2.724,376,2.724,377,2.724,378,2.724,379,2.724,380,2.724,381,2.724,382,3.994,383,2.724,384,2.724,385,2.724,386,2.724,387,2.136,388,2.724,389,2.724,390,2.724]],["title/license.html",[342,1.662,343,1.662,391,1.662]],["body/license.html",[12,1.023,24,1.44,44,0.048,131,0.048,132,0.048,223,1.726,287,1.726,391,2.108,392,2.688,393,3.968,394,2.688,395,2.688,396,2.688,397,2.688,398,3.546,399,2.688,400,2.688,401,2.688,402,2.688,403,2.688,404,2.688,405,3.546,406,4.716,407,2.688,408,2.688,409,3.968,410,2.688,411,3.546,412,2.688,413,2.688,414,2.781,415,2.688,416,2.688,417,2.688,418,2.688,419,2.688,420,2.688,421,2.688,422,3.546,423,2.688,424,2.688,425,2.688,426,2.688,427,2.688,428,2.688,429,2.688,430,3.546,431,3.546,432,2.688,433,2.688,434,2.688,435,2.688,436,2.688,437,2.688,438,2.688,439,2.688,440,2.688,441,2.688,442,2.688,443,2.688,444,2.688,445,2.688,446,2.688,447,2.688,448,2.688,449,2.688,450,2.688,451,2.688,452,2.688,453,2.688,454,2.688,455,2.688,456,2.688,457,2.688,458,2.688,459,2.688,460,2.688]],["title/modules.html",[274,1.53]],["body/modules.html",[44,0.06,131,0.06,132,0.06,274,1.747]],["title/overview.html",[461,2.659]],["body/overview.html",[2,1.714,44,0.059,131,0.059,132,0.059,190,2.036,461,2.979,462,3.799,463,3.799]],["title/miscellaneous/variables.html",[314,1.136,331,1.934]],["body/miscellaneous/variables.html",[5,0.461,23,2.034,24,1.39,25,0.461,29,1.17,30,2.223,34,1.665,38,0.987,42,1.562,44,0.065,46,0.694,55,1.39,57,1.318,58,0.762,69,1.665,82,2.223,89,2.322,91,2.223,131,0.046,132,0.046,137,2.034,141,1.39,151,1.17,158,1.17,179,0.987,241,2.034,242,2.089,243,1.665,255,3.496,256,3.496,266,2.034,274,1.17,278,2.503,287,1.665,290,2.034,291,2.715,302,2.034,303,2.715,305,1.665,314,1.39,317,2.034,331,1.665,387,2.034,414,2.034,464,2.593,465,3.462,466,3.462,467,2.593,468,3.462,469,2.593,470,2.593,471,2.593,472,2.593,473,2.593,474,2.593,475,2.593,476,2.593,477,2.593,478,2.593,479,2.593,480,2.593,481,2.593,482,2.593,483,2.593,484,2.593]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.7.4",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":297,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":219,"title":{},"body":{"classes/BmiModule.html":{},"coverage.html":{}}}],["14",{"_index":298,"title":{},"body":{"coverage.html":{}}}],["18.5",{"_index":235,"title":{},"body":{"classes/BmiModule.html":{}}}],["2",{"_index":233,"title":{},"body":{"classes/BmiModule.html":{}}}],["200",{"_index":221,"title":{},"body":{"classes/BmiModule.html":{}}}],["2021",{"_index":395,"title":{},"body":{"license.html":{}}}],["20211027",{"_index":364,"title":{},"body":{"index.html":{}}}],["25",{"_index":236,"title":{},"body":{"classes/BmiModule.html":{},"coverage.html":{}}}],["3",{"_index":463,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":237,"title":{},"body":{"classes/BmiModule.html":{}}}],["32mb",{"_index":107,"title":{},"body":{"classes/AppModule.html":{}}}],["35",{"_index":238,"title":{},"body":{"classes/BmiModule.html":{}}}],["4",{"_index":462,"title":{},"body":{"overview.html":{}}}],["4.17.1",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["above",{"_index":429,"title":{},"body":{"license.html":{}}}],["action",{"_index":453,"title":{},"body":{"license.html":{}}}],["acts",{"_index":8,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/functions.html":{}}}],["and/or",{"_index":420,"title":{},"body":{"license.html":{}}}],["any)[config.method](config.route",{"_index":170,"title":{},"body":{"classes/BmiController.html":{}}}],["apart",{"_index":15,"title":{},"body":{"classes/AppModule.html":{}}}],["api",{"_index":17,"title":{},"body":{"classes/AppModule.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"index.html":{}}}],["app",{"_index":13,"title":{},"body":{"classes/AppModule.html":{}}}],["app.models",{"_index":93,"title":{},"body":{"classes/AppModule.html":{}}}],["appcontrollers",{"_index":291,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":57,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":69,"title":{},"body":{"classes/AppModule.html":{},"interfaces/Controller.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":1,"title":{"classes/AppModule.html":{}},"body":{"classes/AppModule.html":{},"coverage.html":{}}}],["appmodule(appcontrollers",{"_index":482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arising",{"_index":457,"title":{},"body":{"license.html":{}}}],["associated",{"_index":407,"title":{},"body":{"license.html":{}}}],["async",{"_index":171,"title":{},"body":{"classes/BmiController.html":{}}}],["authors",{"_index":446,"title":{},"body":{"license.html":{}}}],["available",{"_index":264,"title":{},"body":{"classes/LogComponent.html":{}}}],["await",{"_index":176,"title":{},"body":{"classes/BmiController.html":{}}}],["base",{"_index":60,"title":{},"body":{"classes/AppModule.html":{}}}],["basic",{"_index":20,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["begins",{"_index":77,"title":{},"body":{"classes/AppModule.html":{}}}],["being",{"_index":128,"title":{},"body":{"classes/AppModule.html":{}}}],["bmi",{"_index":135,"title":{},"body":{"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"miscellaneous/functions.html":{}}}],["bmi.models",{"_index":215,"title":{},"body":{"classes/BmiModule.html":{}}}],["bmi.module",{"_index":162,"title":{},"body":{"classes/BmiController.html":{}}}],["bmicategory",{"_index":201,"title":{},"body":{"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{}}}],["bmicontroller",{"_index":133,"title":{"classes/BmiController.html":{}},"body":{"classes/BmiController.html":{},"coverage.html":{}}}],["bmicontroller(new",{"_index":467,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bmiinput",{"_index":189,"title":{"interfaces/BmiInput.html":{}},"body":{"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"coverage.html":{}}}],["bmimodule",{"_index":151,"title":{"classes/BmiModule.html":{}},"body":{"classes/BmiController.html":{},"classes/BmiModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bmimodule.getbmidetails",{"_index":168,"title":{},"body":{"classes/BmiController.html":{}}}],["bmioutput",{"_index":200,"title":{"interfaces/BmiOutput.html":{}},"body":{"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"coverage.html":{}}}],["body",{"_index":186,"title":{},"body":{"classes/BmiController.html":{}}}],["bootstrapper",{"_index":320,"title":{},"body":{"miscellaneous/functions.html":{}}}],["build",{"_index":383,"title":{},"body":{"index.html":{}}}],["buisness",{"_index":146,"title":{},"body":{"classes/BmiController.html":{}}}],["c",{"_index":394,"title":{},"body":{"license.html":{}}}],["calculator",{"_index":358,"title":{},"body":{"index.html":{}}}],["call",{"_index":375,"title":{},"body":{"index.html":{}}}],["called",{"_index":273,"title":{},"body":{"classes/LogComponent.html":{}}}],["charge",{"_index":402,"title":{},"body":{"license.html":{}}}],["claim",{"_index":449,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{}},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"overview.html":{}}}],["clone",{"_index":359,"title":{},"body":{"index.html":{}}}],["closed",{"_index":129,"title":{},"body":{"classes/AppModule.html":{}}}],["code",{"_index":213,"title":{},"body":{"classes/BmiModule.html":{}}}],["coding",{"_index":390,"title":{},"body":{"index.html":{}}}],["command",{"_index":361,"title":{},"body":{"index.html":{}}}],["component",{"_index":479,"title":{},"body":{"miscellaneous/variables.html":{}}}],["component's",{"_index":477,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compression",{"_index":88,"title":{},"body":{"classes/AppModule.html":{},"dependencies.html":{}}}],["computebmi",{"_index":300,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["computebmi(record.weightkg",{"_index":217,"title":{},"body":{"classes/BmiModule.html":{}}}],["computebmi(weight",{"_index":319,"title":{},"body":{"miscellaneous/functions.html":{}}}],["computebmi(weight:number",{"_index":231,"title":{},"body":{"classes/BmiModule.html":{}}}],["computebmicategoryandhealthrisk",{"_index":301,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["computebmicategoryandhealthrisk(bmi",{"_index":220,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["conditions",{"_index":428,"title":{},"body":{"license.html":{}}}],["config",{"_index":92,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/functions.html":{}}}],["config.handler(requestdetails",{"_index":177,"title":{},"body":{"classes/BmiController.html":{}}}],["configs",{"_index":164,"title":{},"body":{"classes/BmiController.html":{}}}],["configs.foreach((config",{"_index":169,"title":{},"body":{"classes/BmiController.html":{}}}],["configurable",{"_index":248,"title":{},"body":{"classes/LogComponent.html":{}}}],["configuration",{"_index":137,"title":{},"body":{"classes/BmiController.html":{},"miscellaneous/variables.html":{}}}],["configured",{"_index":267,"title":{},"body":{"classes/LogComponent.html":{}}}],["configuring",{"_index":473,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":459,"title":{},"body":{"license.html":{}}}],["const",{"_index":109,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{}}}],["constructor",{"_index":36,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{}}}],["constructor(bmimodule",{"_index":150,"title":{},"body":{"classes/BmiController.html":{}}}],["constructor(controllers",{"_index":37,"title":{},"body":{"classes/AppModule.html":{}}}],["containing",{"_index":474,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contains",{"_index":50,"title":{},"body":{"classes/AppModule.html":{}}}],["contract",{"_index":454,"title":{},"body":{"license.html":{}}}],["controller",{"_index":38,"title":{"interfaces/Controller.html":{}},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/Controller.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller.router",{"_index":112,"title":{},"body":{"classes/AppModule.html":{}}}],["controllers",{"_index":48,"title":{},"body":{"classes/AppModule.html":{}}}],["controllers(sub",{"_index":68,"title":{},"body":{"classes/AppModule.html":{}}}],["controllers.foreach((controller",{"_index":108,"title":{},"body":{"classes/AppModule.html":{}}}],["converts",{"_index":180,"title":{},"body":{"classes/BmiController.html":{},"miscellaneous/functions.html":{}}}],["copies",{"_index":422,"title":{},"body":{"license.html":{}}}],["copy",{"_index":405,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":393,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":286,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["created",{"_index":481,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creates",{"_index":41,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{}}}],["custom",{"_index":244,"title":{},"body":{"classes/LogComponent.html":{}}}],["damages",{"_index":450,"title":{},"body":{"license.html":{}}}],["data",{"_index":175,"title":{},"body":{"classes/BmiController.html":{},"classes/BmiModule.html":{}}}],["date().toisostring",{"_index":279,"title":{},"body":{"classes/LogComponent.html":{}}}],["deal",{"_index":408,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":460,"title":{},"body":{"license.html":{}}}],["debug",{"_index":260,"title":{},"body":{"classes/LogComponent.html":{},"index.html":{}}}],["default",{"_index":255,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["defaultloglevel",{"_index":251,"title":{},"body":{"classes/LogComponent.html":{}}}],["defaults",{"_index":276,"title":{},"body":{"classes/LogComponent.html":{}}}],["defined",{"_index":39,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{}}}],["defining",{"_index":470,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":144,"title":{"dependencies.html":{}},"body":{"classes/BmiController.html":{},"dependencies.html":{}}}],["description",{"_index":7,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["development",{"_index":325,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["distribute",{"_index":418,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":287,"title":{},"body":{"coverage.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["download",{"_index":366,"title":{},"body":{"index.html":{}}}],["during",{"_index":83,"title":{},"body":{"classes/AppModule.html":{}}}],["each",{"_index":49,"title":{},"body":{"classes/AppModule.html":{}}}],["encapsulates",{"_index":11,"title":{},"body":{"classes/AppModule.html":{}}}],["enlisting",{"_index":472,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entrypoint",{"_index":9,"title":{},"body":{"classes/AppModule.html":{}}}],["env",{"_index":323,"title":{},"body":{"miscellaneous/functions.html":{}}}],["env_file_path",{"_index":303,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["env_sample.json",{"_index":471,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":250,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":257,"title":{},"body":{"classes/LogComponent.html":{}}}],["errors",{"_index":340,"title":{},"body":{"miscellaneous/functions.html":{}}}],["event",{"_index":445,"title":{},"body":{"license.html":{}}}],["exist",{"_index":341,"title":{},"body":{"miscellaneous/functions.html":{}}}],["export",{"_index":94,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{}}}],["exported",{"_index":478,"title":{},"body":{"miscellaneous/variables.html":{}}}],["express",{"_index":12,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/Controller.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["express.application",{"_index":53,"title":{},"body":{"classes/AppModule.html":{}}}],["express.request",{"_index":117,"title":{},"body":{"classes/AppModule.html":{}}}],["express.response",{"_index":119,"title":{},"body":{"classes/AppModule.html":{}}}],["express.static(path.join(__dirname",{"_index":122,"title":{},"body":{"classes/AppModule.html":{}}}],["extended",{"_index":103,"title":{},"body":{"classes/AppModule.html":{}}}],["extending",{"_index":353,"title":{},"body":{"index.html":{}}}],["favorite",{"_index":377,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["filepath",{"_index":334,"title":{},"body":{"miscellaneous/functions.html":{}}}],["files",{"_index":24,"title":{},"body":{"classes/AppModule.html":{},"index.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":381,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":442,"title":{},"body":{"license.html":{}}}],["folder",{"_index":387,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["following",{"_index":427,"title":{},"body":{"license.html":{}}}],["format",{"_index":212,"title":{},"body":{"classes/BmiModule.html":{}}}],["framework",{"_index":204,"title":{},"body":{"classes/BmiModule.html":{}}}],["free",{"_index":401,"title":{},"body":{"license.html":{}}}],["frontend",{"_index":475,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":179,"title":{},"body":{"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":315,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":425,"title":{},"body":{"license.html":{}}}],["gender",{"_index":195,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{}}}],["general",{"_index":222,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["generic",{"_index":142,"title":{},"body":{"classes/BmiController.html":{},"miscellaneous/functions.html":{}}}],["getbmidetails",{"_index":207,"title":{},"body":{"classes/BmiModule.html":{}}}],["getbmidetails(params",{"_index":209,"title":{},"body":{"classes/BmiModule.html":{}}}],["getting",{"_index":342,"title":{"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":362,"title":{},"body":{"index.html":{}}}],["granted",{"_index":400,"title":{},"body":{"license.html":{}}}],["handler",{"_index":167,"title":{},"body":{"classes/BmiController.html":{}}}],["handles",{"_index":338,"title":{},"body":{"miscellaneous/functions.html":{}}}],["happy",{"_index":389,"title":{},"body":{"index.html":{}}}],["headers",{"_index":181,"title":{},"body":{"classes/BmiController.html":{}}}],["healthrisk",{"_index":202,"title":{},"body":{"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{}}}],["heart",{"_index":350,"title":{},"body":{"index.html":{}}}],["height",{"_index":230,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["height:number):number",{"_index":232,"title":{},"body":{"classes/BmiModule.html":{}}}],["heightcm",{"_index":196,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{}}}],["helper",{"_index":332,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":143,"title":{},"body":{"classes/BmiController.html":{}}}],["hereby",{"_index":399,"title":{},"body":{"license.html":{}}}],["holders",{"_index":447,"title":{},"body":{"license.html":{}}}],["holding",{"_index":159,"title":{},"body":{"classes/BmiController.html":{},"interfaces/Controller.html":{}}}],["holds",{"_index":56,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["http",{"_index":87,"title":{},"body":{"classes/AppModule.html":{}}}],["http.server",{"_index":62,"title":{},"body":{"classes/AppModule.html":{}}}],["http://localhost:${process.env.port",{"_index":126,"title":{},"body":{"classes/AppModule.html":{}}}],["http://localhost:3000/api/bmi",{"_index":376,"title":{},"body":{"index.html":{}}}],["https://github.com/epathak/code",{"_index":363,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["implementation",{"_index":206,"title":{},"body":{"classes/BmiModule.html":{}}}],["implied",{"_index":438,"title":{},"body":{"license.html":{}}}],["import",{"_index":86,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"interfaces/Controller.html":{}}}],["imported",{"_index":328,"title":{},"body":{"miscellaneous/functions.html":{}}}],["included",{"_index":432,"title":{},"body":{"license.html":{}}}],["includes",{"_index":351,"title":{},"body":{"index.html":{}}}],["including",{"_index":411,"title":{},"body":{"license.html":{}}}],["independent",{"_index":205,"title":{},"body":{"classes/BmiModule.html":{}}}],["index",{"_index":25,"title":{"index.html":{}},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{}}}],["initialisecontrollers",{"_index":32,"title":{},"body":{"classes/AppModule.html":{}}}],["initialisecontrollers(controllers",{"_index":65,"title":{},"body":{"classes/AppModule.html":{}}}],["initialiseenvironment",{"_index":306,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initialisemiddleware",{"_index":33,"title":{},"body":{"classes/AppModule.html":{}}}],["input",{"_index":193,"title":{},"body":{"interfaces/BmiInput.html":{}}}],["instance",{"_index":42,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["instantiates",{"_index":76,"title":{},"body":{"classes/AppModule.html":{}}}],["instructions(for",{"_index":356,"title":{},"body":{"index.html":{}}}],["interface",{"_index":188,"title":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{}},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"coverage.html":{}}}],["interfaces",{"_index":190,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"overview.html":{}}}],["isolating",{"_index":145,"title":{},"body":{"classes/BmiController.html":{}}}],["isused",{"_index":85,"title":{},"body":{"classes/AppModule.html":{}}}],["json",{"_index":327,"title":{},"body":{"miscellaneous/functions.html":{}}}],["kind",{"_index":437,"title":{},"body":{"license.html":{}}}],["later",{"_index":226,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":247,"title":{},"body":{"classes/LogComponent.html":{}}}],["levels",{"_index":246,"title":{},"body":{"classes/LogComponent.html":{}}}],["liability",{"_index":451,"title":{},"body":{"license.html":{}}}],["liable",{"_index":448,"title":{},"body":{"license.html":{}}}],["library",{"_index":227,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["license",{"_index":391,"title":{"license.html":{}},"body":{"license.html":{}}}],["lifecycle",{"_index":64,"title":{},"body":{"classes/AppModule.html":{}}}],["limit",{"_index":106,"title":{},"body":{"classes/AppModule.html":{}}}],["limitation",{"_index":412,"title":{},"body":{"license.html":{}}}],["limited",{"_index":439,"title":{},"body":{"license.html":{}}}],["linux/mac",{"_index":374,"title":{},"body":{"index.html":{}}}],["listening",{"_index":78,"title":{},"body":{"classes/AppModule.html":{}}}],["loadenvfromjsonfile",{"_index":307,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["loadenvfromjsonfile(filepath",{"_index":329,"title":{},"body":{"miscellaneous/functions.html":{}}}],["loads",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["local",{"_index":324,"title":{},"body":{"miscellaneous/functions.html":{}}}],["located",{"_index":385,"title":{},"body":{"index.html":{}}}],["log",{"_index":89,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["log(`route",{"_index":113,"title":{},"body":{"classes/AppModule.html":{}}}],["log(`the",{"_index":125,"title":{},"body":{"classes/AppModule.html":{}}}],["log(logmessage",{"_index":268,"title":{},"body":{"classes/LogComponent.html":{}}}],["logcomponent",{"_index":242,"title":{"classes/LogComponent.html":{}},"body":{"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logcomponent.log.bind(logcomponent",{"_index":476,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logcomponent/log.module",{"_index":90,"title":{},"body":{"classes/AppModule.html":{}}}],["logger",{"_index":245,"title":{},"body":{"classes/LogComponent.html":{}}}],["logging",{"_index":265,"title":{},"body":{"classes/LogComponent.html":{}}}],["logic",{"_index":147,"title":{},"body":{"classes/BmiController.html":{}}}],["loglevels",{"_index":252,"title":{},"body":{"classes/LogComponent.html":{}}}],["logmessage",{"_index":277,"title":{},"body":{"classes/LogComponent.html":{}}}],["logtime",{"_index":270,"title":{},"body":{"classes/LogComponent.html":{}}}],["logtime=new",{"_index":284,"title":{},"body":{"classes/LogComponent.html":{}}}],["map",{"_index":138,"title":{},"body":{"classes/BmiController.html":{}}}],["mapped",{"_index":154,"title":{},"body":{"classes/BmiController.html":{}}}],["matching",{"_index":132,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":95,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{}}}],["merchantability",{"_index":441,"title":{},"body":{"license.html":{}}}],["merge",{"_index":416,"title":{},"body":{"license.html":{}}}],["method",{"_index":165,"title":{},"body":{"classes/BmiController.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{}}}],["middleware",{"_index":74,"title":{},"body":{"classes/AppModule.html":{}}}],["miscellaneous",{"_index":314,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":392,"title":{},"body":{"license.html":{}}}],["model",{"_index":192,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{}}}],["models",{"_index":240,"title":{},"body":{"interfaces/Controller.html":{}}}],["modify",{"_index":415,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":388,"title":{},"body":{"index.html":{}}}],["modular",{"_index":348,"title":{},"body":{"index.html":{}}}],["module",{"_index":141,"title":{},"body":{"classes/BmiController.html":{},"interfaces/Controller.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["module(sub",{"_index":157,"title":{},"body":{"classes/BmiController.html":{},"interfaces/Controller.html":{}}}],["modules",{"_index":274,"title":{"modules.html":{}},"body":{"classes/LogComponent.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":354,"title":{},"body":{"index.html":{}}}],["mount",{"_index":61,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/Controller.html":{}}}],["mounting",{"_index":16,"title":{},"body":{"classes/AppModule.html":{}}}],["mounts",{"_index":67,"title":{},"body":{"classes/AppModule.html":{}}}],["moved",{"_index":225,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["msgloglevel",{"_index":269,"title":{},"body":{"classes/LogComponent.html":{}}}],["msgloglevel='error",{"_index":283,"title":{},"body":{"classes/LogComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["needed",{"_index":384,"title":{},"body":{"index.html":{}}}],["new",{"_index":278,"title":{},"body":{"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["noninfringement",{"_index":444,"title":{},"body":{"license.html":{}}}],["notice",{"_index":430,"title":{},"body":{"license.html":{}}}],["npm",{"_index":382,"title":{},"body":{"index.html":{}}}],["number",{"_index":198,"title":{},"body":{"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":158,"title":{},"body":{"classes/BmiController.html":{},"interfaces/Controller.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":404,"title":{},"body":{"license.html":{}}}],["optional",{"_index":47,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["oriented",{"_index":347,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":456,"title":{},"body":{"license.html":{}}}],["out",{"_index":458,"title":{},"body":{"license.html":{}}}],["output",{"_index":199,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{}}}],["overview",{"_index":461,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":311,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":96,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":214,"title":{},"body":{"classes/BmiModule.html":{}}}],["params.body.map((record",{"_index":216,"title":{},"body":{"classes/BmiModule.html":{}}}],["parseexpressrequest",{"_index":296,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parseexpressrequest(req",{"_index":173,"title":{},"body":{"classes/BmiController.html":{},"miscellaneous/functions.html":{}}}],["particular",{"_index":443,"title":{},"body":{"license.html":{}}}],["path",{"_index":29,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/Controller.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["pathak",{"_index":397,"title":{},"body":{"license.html":{}}}],["permission",{"_index":398,"title":{},"body":{"license.html":{}}}],["permit",{"_index":423,"title":{},"body":{"license.html":{}}}],["person",{"_index":403,"title":{},"body":{"license.html":{}}}],["persons",{"_index":424,"title":{},"body":{"license.html":{}}}],["point",{"_index":469,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":434,"title":{},"body":{"license.html":{}}}],["post",{"_index":166,"title":{},"body":{"classes/BmiController.html":{}}}],["preparing",{"_index":321,"title":{},"body":{"miscellaneous/functions.html":{}}}],["primarily",{"_index":81,"title":{},"body":{"classes/AppModule.html":{}}}],["primary",{"_index":272,"title":{},"body":{"classes/LogComponent.html":{}}}],["private",{"_index":27,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["process.env.log_level",{"_index":281,"title":{},"body":{"classes/LogComponent.html":{}}}],["properties",{"_index":26,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{}}}],["provided",{"_index":435,"title":{},"body":{"license.html":{}}}],["provides",{"_index":19,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":352,"title":{},"body":{"index.html":{}}}],["public",{"_index":148,"title":{},"body":{"classes/BmiController.html":{}}}],["publish",{"_index":417,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":223,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["query",{"_index":184,"title":{},"body":{"classes/BmiController.html":{}}}],["read",{"_index":339,"title":{},"body":{"miscellaneous/functions.html":{}}}],["reading",{"_index":333,"title":{},"body":{"miscellaneous/functions.html":{}}}],["readonly",{"_index":28,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["reads",{"_index":330,"title":{},"body":{"miscellaneous/functions.html":{}}}],["record",{"_index":194,"title":{},"body":{"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{}}}],["record.heightcm",{"_index":218,"title":{},"body":{"classes/BmiModule.html":{}}}],["registered",{"_index":114,"title":{},"body":{"classes/AppModule.html":{}}}],["related",{"_index":234,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["repo",{"_index":360,"title":{},"body":{"index.html":{}}}],["req",{"_index":116,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"miscellaneous/functions.html":{}}}],["req.body",{"_index":187,"title":{},"body":{"classes/BmiController.html":{}}}],["req.headers",{"_index":182,"title":{},"body":{"classes/BmiController.html":{}}}],["req.params",{"_index":183,"title":{},"body":{"classes/BmiController.html":{}}}],["req.query",{"_index":185,"title":{},"body":{"classes/BmiController.html":{}}}],["request",{"_index":160,"title":{},"body":{"classes/BmiController.html":{},"miscellaneous/functions.html":{}}}],["requestdetails",{"_index":172,"title":{},"body":{"classes/BmiController.html":{}}}],["requests",{"_index":79,"title":{},"body":{"classes/AppModule.html":{}}}],["res",{"_index":118,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{}}}],["res.status(200).end",{"_index":120,"title":{},"body":{"classes/AppModule.html":{}}}],["res.status(status).send(data",{"_index":178,"title":{},"body":{"classes/BmiController.html":{}}}],["resilience",{"_index":336,"title":{},"body":{"miscellaneous/functions.html":{}}}],["response",{"_index":161,"title":{},"body":{"classes/BmiController.html":{},"classes/BmiModule.html":{}}}],["restriction",{"_index":410,"title":{},"body":{"license.html":{}}}],["result",{"_index":211,"title":{},"body":{"classes/BmiModule.html":{}}}],["results",{"_index":131,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":127,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{}}}],["returns",{"_index":70,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"classes/BmiModule.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":228,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["rights",{"_index":413,"title":{},"body":{"license.html":{}}}],["root",{"_index":156,"title":{},"body":{"classes/BmiController.html":{},"interfaces/Controller.html":{}}}],["route",{"_index":52,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{}}}],["router",{"_index":149,"title":{},"body":{"classes/BmiController.html":{},"interfaces/Controller.html":{}}}],["routes",{"_index":18,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/Controller.html":{}}}],["run",{"_index":370,"title":{},"body":{"index.html":{}}}],["running",{"_index":357,"title":{},"body":{"index.html":{}}}],["safereadjsonfile",{"_index":308,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["safereadjsonfile(filepath",{"_index":335,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sample",{"_index":140,"title":{},"body":{"classes/BmiController.html":{},"index.html":{}}}],["see",{"_index":380,"title":{},"body":{"index.html":{}}}],["sell",{"_index":421,"title":{},"body":{"license.html":{}}}],["sensible",{"_index":275,"title":{},"body":{"classes/LogComponent.html":{}}}],["server",{"_index":30,"title":{},"body":{"classes/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server(instance",{"_index":484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["services",{"_index":139,"title":{},"body":{"classes/BmiController.html":{},"classes/BmiModule.html":{},"interfaces/Controller.html":{}}}],["serving",{"_index":22,"title":{},"body":{"classes/AppModule.html":{}}}],["set",{"_index":153,"title":{},"body":{"classes/BmiController.html":{},"classes/LogComponent.html":{}}}],["shall",{"_index":431,"title":{},"body":{"license.html":{}}}],["single",{"_index":468,"title":{},"body":{"miscellaneous/variables.html":{}}}],["singleton(single",{"_index":480,"title":{},"body":{"miscellaneous/variables.html":{}}}],["software",{"_index":406,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"index.html":{}}}],["specifics",{"_index":14,"title":{},"body":{"classes/AppModule.html":{}}}],["src",{"_index":386,"title":{},"body":{"index.html":{}}}],["src/.../app.controllers.ts",{"_index":464,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../bmi.controller.ts",{"_index":318,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../bmi.module.ts",{"_index":316,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../config.ts",{"_index":465,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log.module.ts",{"_index":466,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.ts",{"_index":317,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/appcomponent/app.controllers.ts",{"_index":290,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/appcomponent/app.models.ts",{"_index":239,"title":{},"body":{"interfaces/Controller.html":{},"coverage.html":{}}}],["src/appcomponent/app.module.ts",{"_index":6,"title":{},"body":{"classes/AppModule.html":{},"coverage.html":{}}}],["src/appcomponent/app.module.ts:22",{"_index":54,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:29",{"_index":59,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:36",{"_index":40,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:55",{"_index":72,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:65",{"_index":66,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:82",{"_index":75,"title":{},"body":{"classes/AppModule.html":{}}}],["src/appcomponent/app.module.ts:94",{"_index":80,"title":{},"body":{"classes/AppModule.html":{}}}],["src/bmicomponent/bmi.controller.ts",{"_index":134,"title":{},"body":{"classes/BmiController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/bmicomponent/bmi.controller.ts:16",{"_index":155,"title":{},"body":{"classes/BmiController.html":{}}}],["src/bmicomponent/bmi.controller.ts:22",{"_index":152,"title":{},"body":{"classes/BmiController.html":{}}}],["src/bmicomponent/bmi.models.ts",{"_index":191,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{},"coverage.html":{}}}],["src/bmicomponent/bmi.module.ts",{"_index":203,"title":{},"body":{"classes/BmiModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/bmicomponent/bmi.module.ts:22",{"_index":210,"title":{},"body":{"classes/BmiModule.html":{}}}],["src/bmicomponent/bmi.module.ts:8",{"_index":208,"title":{},"body":{"classes/BmiModule.html":{}}}],["src/config.ts",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logcomponent/log.module.ts",{"_index":243,"title":{},"body":{"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/logcomponent/log.module.ts:13",{"_index":262,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/logcomponent/log.module.ts:19",{"_index":258,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/logcomponent/log.module.ts:25",{"_index":254,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/logcomponent/log.module.ts:42",{"_index":271,"title":{},"body":{"classes/LogComponent.html":{}}}],["src/server.ts",{"_index":305,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":73,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiModule.html":{}}}],["start",{"_index":34,"title":{},"body":{"classes/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["start.bat",{"_index":371,"title":{},"body":{"index.html":{}}}],["start.sh",{"_index":373,"title":{},"body":{"index.html":{}}}],["started",{"_index":343,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":345,"title":{},"body":{"index.html":{}}}],["statements",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":23,"title":{},"body":{"classes/AppModule.html":{},"miscellaneous/variables.html":{}}}],["static_files_path",{"_index":91,"title":{},"body":{"classes/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":174,"title":{},"body":{"classes/BmiController.html":{},"classes/BmiModule.html":{}}}],["stop",{"_index":35,"title":{},"body":{"classes/AppModule.html":{}}}],["string",{"_index":58,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":349,"title":{},"body":{"index.html":{}}}],["sub",{"_index":241,"title":{},"body":{"interfaces/Controller.html":{},"miscellaneous/variables.html":{}}}],["subapp(sub",{"_index":51,"title":{},"body":{"classes/AppModule.html":{}}}],["subject",{"_index":426,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":419,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":433,"title":{},"body":{"license.html":{}}}],["support",{"_index":21,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{}}}],["syntax",{"_index":337,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sysloglevel",{"_index":253,"title":{},"body":{"classes/LogComponent.html":{}}}],["system",{"_index":263,"title":{},"body":{"classes/LogComponent.html":{}}}],["table",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["tejas",{"_index":396,"title":{},"body":{"license.html":{}}}],["tejaspathak.git",{"_index":365,"title":{},"body":{"index.html":{}}}],["tejaspathak/archive/refs/heads/main.zip",{"_index":368,"title":{},"body":{"index.html":{}}}],["template",{"_index":346,"title":{},"body":{"index.html":{}}}],["test",{"_index":378,"title":{},"body":{"index.html":{}}}],["testing",{"_index":84,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app",{"_index":97,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.get('/health",{"_index":115,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.listen(process.env.port",{"_index":124,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use",{"_index":121,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(compression",{"_index":101,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(express.json",{"_index":105,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(express.urlencoded",{"_index":102,"title":{},"body":{"classes/AppModule.html":{}}}],["this.app.use(route",{"_index":111,"title":{},"body":{"classes/AppModule.html":{}}}],["this.defaultloglevel",{"_index":282,"title":{},"body":{"classes/LogComponent.html":{}}}],["this.initialisecontrollers(controllers",{"_index":100,"title":{},"body":{"classes/AppModule.html":{}}}],["this.initialisemiddleware",{"_index":99,"title":{},"body":{"classes/AppModule.html":{}}}],["this.loglevels.indexof(msgloglevel",{"_index":285,"title":{},"body":{"classes/LogComponent.html":{}}}],["this.path",{"_index":98,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{}}}],["this.path}${controller.path",{"_index":110,"title":{},"body":{"classes/AppModule.html":{}}}],["this.router",{"_index":163,"title":{},"body":{"classes/BmiController.html":{}}}],["this.server",{"_index":123,"title":{},"body":{"classes/AppModule.html":{}}}],["this.server.close",{"_index":130,"title":{},"body":{"classes/AppModule.html":{}}}],["this.sysloglevel",{"_index":280,"title":{},"body":{"classes/LogComponent.html":{}}}],["through",{"_index":63,"title":{},"body":{"classes/AppModule.html":{}}}],["todo",{"_index":224,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["tool",{"_index":379,"title":{},"body":{"index.html":{}}}],["tort",{"_index":455,"title":{},"body":{"license.html":{}}}],["trace",{"_index":261,"title":{},"body":{"classes/LogComponent.html":{}}}],["true",{"_index":104,"title":{},"body":{"classes/AppModule.html":{}}}],["type",{"_index":46,"title":{},"body":{"classes/AppModule.html":{},"classes/BmiController.html":{},"interfaces/BmiInput.html":{},"classes/BmiModule.html":{},"interfaces/BmiOutput.html":{},"interfaces/Controller.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":344,"title":{},"body":{"index.html":{}}}],["unzip",{"_index":369,"title":{},"body":{"index.html":{}}}],["usage",{"_index":355,"title":{},"body":{"index.html":{}}}],["use",{"_index":414,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["used",{"_index":82,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["uses",{"_index":136,"title":{},"body":{"classes/BmiController.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["using",{"_index":326,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":256,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":55,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables",{"_index":331,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["via",{"_index":249,"title":{},"body":{"classes/LogComponent.html":{}}}],["void",{"_index":71,"title":{},"body":{"classes/AppModule.html":{},"classes/LogComponent.html":{},"miscellaneous/functions.html":{}}}],["warn",{"_index":259,"title":{},"body":{"classes/LogComponent.html":{}}}],["warranties",{"_index":440,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":436,"title":{},"body":{"license.html":{}}}],["weight",{"_index":229,"title":{},"body":{"classes/BmiModule.html":{},"miscellaneous/functions.html":{}}}],["weightkg",{"_index":197,"title":{},"body":{"interfaces/BmiInput.html":{},"interfaces/BmiOutput.html":{}}}],["well",{"_index":10,"title":{},"body":{"classes/AppModule.html":{}}}],["whether",{"_index":452,"title":{},"body":{"license.html":{}}}],["windows",{"_index":372,"title":{},"body":{"index.html":{}}}],["within",{"_index":266,"title":{},"body":{"classes/LogComponent.html":{},"miscellaneous/variables.html":{}}}],["without",{"_index":409,"title":{},"body":{"license.html":{}}}],["zip",{"_index":367,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AppModule.html":{"url":"classes/AppModule.html","title":"class - AppModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appComponent/app.module.ts\n        \n\n\n            \n                Description\n            \n            \n                The AppModule acts as an entrypoint as well as encapsulates express app specifics.\nApart from mounting api routes also provides basic support for serving static files.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                app\n                            \n                            \n                                    Private\n                                    Readonly\n                                path\n                            \n                            \n                                    Private\n                                server\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initialiseControllers\n                            \n                            \n                                initialiseMiddleware\n                            \n                            \n                                start\n                            \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(controllers: Controller[])\n                    \n                \n                        \n                            \n                                Defined in src/appComponent/app.module.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of AppModule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        controllers\n                                                  \n                                                        \n                                                                        Controller[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Each controller contains a subapp(sub route)\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :     express.Application\n\n                    \n                \n                    \n                        \n                                Defined in src/appComponent/app.module.ts:22\n                        \n                    \n\n            \n                \n                    The variable that holds the express application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/appComponent/app.module.ts:29\n                        \n                    \n\n            \n                \n                    The variable that holds the base mount path for api routes.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Type :     http.Server\n\n                    \n                \n                    \n                        \n                                Defined in src/appComponent/app.module.ts:36\n                        \n                    \n\n            \n                \n                    The variable that holds the instance of application through its lifecycle.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initialiseControllers\n                        \n                    \n                \n            \n            \n                \ninitialiseControllers(controllers: Controller[])\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:65\n                \n            \n\n\n            \n                \n                    Does what it says, mounts controllers(sub-applications).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    controllers\n                                    \n                                                Controller[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialiseMiddleware\n                        \n                    \n                \n            \n            \n                \ninitialiseMiddleware()\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:55\n                \n            \n\n\n            \n                \n                    Does what it says, mounts standard middleware.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart()\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:82\n                \n            \n\n\n            \n                \n                    Instantiates the server and begins listening for requests.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        instance of app\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/appComponent/app.module.ts:94\n                \n            \n\n\n            \n                \n                    Primarily used during testing, isused to stop server.\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        instance of app\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as http from 'http';\nimport * as path from 'path';\nimport express from 'express';\nimport compression from 'compression';\nimport { log } from '../logComponent/log.module';\nimport { STATIC_FILES_PATH } from '../config';\nimport { Controller } from './app.models';\n\n/**\n * The AppModule acts as an entrypoint as well as encapsulates express app specifics.\n * Apart from mounting api routes also provides basic support for serving static files.\n * @export\n * @class AppModule\n */\nexport class AppModule {\n  /**\n   * The variable that holds the express application.\n   * @private\n   * @type {express.Application}\n   * @memberof AppModule\n   */\n  private readonly app: express.Application;\n  /**\n   * The variable that holds the base mount path for api routes.\n   * @private\n   * @type {string}\n   * @memberof AppModule\n   */\n  private readonly path: string;\n  /**\n   * The variable that holds the instance of application through its lifecycle.\n   * @private\n   * @type {http.Server}\n   * @memberof AppModule\n   */\n  private server!: http.Server;\n\n  /**\n   * Creates an instance of AppModule.\n   * @param {Controller[]} controllers Each controller contains a subapp(sub route)\n   * @memberof AppModule\n   */\n  constructor(controllers: Controller[]) {\n    this.app = express();\n    this.path = '/api';\n\n    this.initialiseMiddleware();\n    this.initialiseControllers(controllers)\n  }\n\n  /**\n   * Does what it says, mounts standard middleware.\n   * @memberof AppModule\n   */\n  initialiseMiddleware() {\n    this.app.use(compression());\n    this.app.use(express.urlencoded({ extended: true }));\n    this.app.use(express.json({ limit: '32mb' }));\n  }\n\n  /**\n   * Does what it says, mounts controllers(sub-applications).\n   * @memberof AppModule\n   */\n  initialiseControllers(controllers: Controller[]) {\n    controllers.forEach((controller: Controller) => {\n      const route = `${this.path}${controller.path}`;\n\n      this.app.use(route, controller.router);\n      log(`Route registered: ${route}`, 'INFO');\n    })\n\n    this.app.get('/health', (req: express.Request, res: express.Response) => res.status(200).end());\n    this.app.use('/', express.static(path.join(__dirname, '..', '..', STATIC_FILES_PATH)));\n  }\n\n  /**\n   * Instantiates the server and begins listening for requests.\n   * @returns instance of app\n   * @memberof AppModule\n   */\n  start() {\n    this.server = this.app.listen(process.env.PORT, () => {\n      log(`The server is listening @ http://localhost:${process.env.PORT}`);\n    });\n    return this.server;\n  }\n\n  /**\n   * Primarily used during testing, isused to stop server.\n   * @returns instance of app\n   * @memberof AppModule\n   */\n  stop() {\n    log(`The server is being closed...`);\n    return this.server.close();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BmiController.html":{"url":"classes/BmiController.html","title":"class - BmiController","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BmiController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bmiComponent/bmi.controller.ts\n        \n\n\n            \n                Description\n            \n            \n                This bmi controller uses a route configuration to map routes to services.\nSample module is generic here, and has no dependencies on express, isolating buisness logic.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bmiModule: BmiModule)\n                    \n                \n                        \n                            \n                                Defined in src/bmiComponent/bmi.controller.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of BmiController.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        bmiModule\n                                                  \n                                                        \n                                                                        BmiModule\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Set of services which can be mapped to routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/bmiComponent/bmi.controller.ts:16\n                        \n                    \n\n            \n                \n                    The root mount path for all the routes of the module(sub-application)\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/bmiComponent/bmi.controller.ts:22\n                        \n                    \n\n            \n                \n                    The router object for holding all the routes to services of the module.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import express, { Router, Request, Response } from \"express\";\nimport { BmiModule } from \"./bmi.module\";\n\n/**\n * This bmi controller uses a route configuration to map routes to services.\n * Sample module is generic here, and has no dependencies on express, isolating buisness logic.\n * @export\n * @class BmiController\n */\nexport class BmiController {\n  /**\n   * The root mount path for all the routes of the module(sub-application)\n   * @type {string}\n   * @memberof BmiController\n   */\n  public path: string;\n  /**\n   * The router object for holding all the routes to services of the module.\n   * @type {Router}\n   * @memberof BmiController\n   */\n  public router: Router;\n\n  /**\n   * Creates an instance of BmiController.\n   * @param {BmiModule} bmiModule Set of services which can be mapped to routes.\n   * @memberof BmiController\n   */\n  constructor(bmiModule: BmiModule) {\n    this.path = '/bmi';\n    this.router = Router();\n\n    const configs = [\n      { method: 'post', route: '/', handler: bmiModule.getBmiDetails }\n    ];\n\n    configs.forEach((config: any) => {\n      (this.router as any)[config.method](config.route, async (req: any, res: any) => {\n        const requestDetails = parseExpressRequest(req);\n        const { status, data } = await config.handler(requestDetails);\n\n        res.status(status).send(data);\n      })\n    })\n  }\n}\n\n/**\n * This function converts an express request into a generic object.\n * @param {Request} req\n * @returns\n */\nfunction parseExpressRequest(req: any) {\n  return {\n    headers: req.headers,\n    path: req.params,\n    query: req.query,\n    body: req.body\n  };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BmiInput.html":{"url":"interfaces/BmiInput.html","title":"interface - BmiInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BmiInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bmiComponent/bmi.models.ts\n        \n\n\n            \n                Description\n            \n            \n                The model of input record for API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Gender\n                                        \n                                \n                                \n                                        \n                                            HeightCm\n                                        \n                                \n                                \n                                        \n                                            WeightKg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HeightCm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HeightCm:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeightKg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        WeightKg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BmiInput {\n  Gender: string;\n  HeightCm: number;\n  WeightKg: number;\n}\n\n/**\n * The model of output record for API\n * @export\n * @interface BmiOutput\n */\nexport interface BmiOutput {\n  Gender: string;\n  HeightCm: number;\n  WeightKg: number;\n  BMI: number;\n  BMICategory: string;\n  HealthRisk: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BmiModule.html":{"url":"classes/BmiModule.html","title":"class - BmiModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BmiModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bmiComponent/bmi.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Framework independent implementation of services.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBmiDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/bmiComponent/bmi.module.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of BmiModule.\n\n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getBmiDetails\n                        \n                    \n                \n            \n            \n                \ngetBmiDetails(params: any)\n                \n            \n\n\n            \n                \n                    Defined in src/bmiComponent/bmi.module.ts:22\n                \n            \n\n\n            \n                \n                    Returns BMI result in standard api response format: status-code and data.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: number; data: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { BmiInput, BmiOutput } from \"./bmi.models\";\n\n/**\n * Framework independent implementation of services.\n * @export\n * @class BmiModule\n */\nexport class BmiModule {\n\n  /**\n   *Creates an instance of BmiModule.\n   * @memberof BmiModule\n   */\n  constructor() {\n    \n  }\n  /**\n   * Returns BMI result in standard api response format: status-code and data.\n   * @returns\n   * @memberof BmiModule\n   */\n  getBmiDetails(params: any) {\n    const result = params.body.map((record: BmiInput) => {\n      const bmi = computeBmi(record.WeightKg, (record.HeightCm / 100));\n      const [bmiCategory, healthRisk] = computeBmiCategoryAndHealthRisk(bmi);\n      return {\n        ...record,\n        BMI: bmi,\n        BMICategory: bmiCategory,\n        HealthRisk: healthRisk\n      };\n    });\n    return { status: 200, data: result };\n  }\n\n}\n\n/**\n * A general purpose function which returns the BMI.\n * Todo: Could be moved later to a library for reuse.\n * @param {number} weight\n * @param {number} height\n * @returns {number}\n */\nfunction computeBmi(weight:number, height:number):number {\n  return  weight / ( height ** 2);\n}\n\n/**\n * A general purpose function which returns the BMI related parameters.\n * Todo: Could be moved later to a library for reuse.\n * @param {number} bmi\n * @returns {string[]}\n */\nfunction computeBmiCategoryAndHealthRisk(bmi: number): string[] {\n  if (bmi = 18.5 && bmi = 25 && bmi = 30 && bmi = 35 && bmi \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BmiOutput.html":{"url":"interfaces/BmiOutput.html","title":"interface - BmiOutput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BmiOutput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bmiComponent/bmi.models.ts\n        \n\n\n            \n                Description\n            \n            \n                The model of output record for API\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            BMI\n                                        \n                                \n                                \n                                        \n                                            BMICategory\n                                        \n                                \n                                \n                                        \n                                            Gender\n                                        \n                                \n                                \n                                        \n                                            HealthRisk\n                                        \n                                \n                                \n                                        \n                                            HeightCm\n                                        \n                                \n                                \n                                        \n                                            WeightKg\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        BMI\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BMI:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        BMICategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        BMICategory:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HealthRisk\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HealthRisk:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        HeightCm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        HeightCm:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        WeightKg\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        WeightKg:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BmiInput {\n  Gender: string;\n  HeightCm: number;\n  WeightKg: number;\n}\n\n/**\n * The model of output record for API\n * @export\n * @interface BmiOutput\n */\nexport interface BmiOutput {\n  Gender: string;\n  HeightCm: number;\n  WeightKg: number;\n  BMI: number;\n  BMICategory: string;\n  HealthRisk: string;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Controller.html":{"url":"interfaces/Controller.html","title":"interface - Controller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Controller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/appComponent/app.models.ts\n        \n\n\n            \n                Description\n            \n            \n                The interface which models a controller for all sub-applications.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            router\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The root mount path for all the routes of the module(sub-application)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        router\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        router:         Router\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Router\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The router object for holding all the routes to services of the module.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Router } from \"express\";\n\n/**\n * The interface which models a controller for all sub-applications.\n * @export\n * @interface Controller\n */\nexport interface Controller{\n  /**\n   * The root mount path for all the routes of the module(sub-application)\n   * @type {string}\n   * @memberof Controller\n   */\n  path: string;\n  /**\n   * The router object for holding all the routes to services of the module.\n   * @type {Router}\n   * @memberof Controller\n   */\n  router: Router;\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogComponent.html":{"url":"classes/LogComponent.html","title":"class - LogComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logComponent/log.module.ts\n        \n\n\n            \n                Description\n            \n            \n                A custom logger with basic support for log levels.\nLog level is also configurable via an environment variable.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                defaultLogLevel\n                            \n                            \n                                    Private\n                                    Readonly\n                                logLevels\n                            \n                            \n                                    Private\n                                    Readonly\n                                sysLogLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/logComponent/log.module.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of LogComponent.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        defaultLogLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ERROR'\n                    \n                \n                    \n                        \n                                Defined in src/logComponent/log.module.ts:19\n                        \n                    \n\n            \n                \n                    A log level to be used by default if not set via environment variable.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['ERROR', 'WARN', 'INFO', 'DEBUG', 'TRACE']\n                    \n                \n                    \n                        \n                                Defined in src/logComponent/log.module.ts:13\n                        \n                    \n\n            \n                \n                    The default system log levels available for logging within application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        sysLogLevel\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/logComponent/log.module.ts:25\n                        \n                    \n\n            \n                \n                    A variable that holds the configured system log level.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(logMessage: string, msgLogLevel: string, logTime)\n                \n            \n\n\n            \n                \n                    Defined in src/logComponent/log.module.ts:42\n                \n            \n\n\n            \n                \n                    Primary logging function to be called from other modules, uses sensible defaults.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    logMessage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    msgLogLevel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'ERROR'\n                                    \n\n                                \n                                \n                                    logTime\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        new Date().toISOString()\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export default class LogComponent {\n  /**\n   * The default system log levels available for logging within application.\n   * @private\n   * @memberof LogComponent\n   */\n  private readonly logLevels = ['ERROR', 'WARN', 'INFO', 'DEBUG', 'TRACE'];\n  /**\n   * A log level to be used by default if not set via environment variable.\n   * @private\n   * @memberof LogComponent\n   */\n  private readonly defaultLogLevel = 'ERROR';\n  /**\n   * A variable that holds the configured system log level.\n   * @private\n   * @memberof LogComponent\n   */\n  private readonly sysLogLevel;\n\n  /**\n   *Creates an instance of LogComponent.\n   * @memberof LogComponent\n   */\n  constructor() {\n    this.sysLogLevel = process.env.LOG_LEVEL || this.defaultLogLevel;\n  }\n\n  /**\n   * Primary logging function to be called from other modules, uses sensible defaults.\n   * @param {string} logMessage\n   * @param {string} [msgLogLevel='ERROR']\n   * @param {*} [logTime=new Date().toISOString()]\n   * @memberof LogComponent\n   */\n  log(logMessage: string, msgLogLevel = 'ERROR', logTime = new Date().toISOString()) {\n    if (this.logLevels.indexOf(msgLogLevel) \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/appComponent/app.controllers.ts\n            \n            variable\n            appControllers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/appComponent/app.models.ts\n            \n            interface\n            Controller\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/appComponent/app.module.ts\n            \n            class\n            AppModule\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.controller.ts\n            \n            class\n            BmiController\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.controller.ts\n            \n            function\n            parseExpressRequest\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.models.ts\n            \n            interface\n            BmiInput\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.models.ts\n            \n            interface\n            BmiOutput\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.module.ts\n            \n            class\n            BmiModule\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.module.ts\n            \n            function\n            computeBmi\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/bmiComponent/bmi.module.ts\n            \n            function\n            computeBmiCategoryAndHealthRisk\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            ENV_FILE_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config.ts\n            \n            variable\n            STATIC_FILES_PATH\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/logComponent/log.module.ts\n            \n            class\n            LogComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/logComponent/log.module.ts\n            \n            variable\n            log\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/logComponent/log.module.ts\n            \n            variable\n            logComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            initialiseEnvironment\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            loadEnvFromJsonFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            function\n            safeReadJsonFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/server.ts\n            \n            variable\n            server\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            compression : ^1.7.4\n        \n            express : ^4.17.1\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            computeBmi   (src/.../bmi.module.ts)\n                        \n                        \n                            computeBmiCategoryAndHealthRisk   (src/.../bmi.module.ts)\n                        \n                        \n                            initialiseEnvironment   (src/.../server.ts)\n                        \n                        \n                            loadEnvFromJsonFile   (src/.../server.ts)\n                        \n                        \n                            parseExpressRequest   (src/.../bmi.controller.ts)\n                        \n                        \n                            safeReadJsonFile   (src/.../server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/bmiComponent/bmi.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        computeBmi\n                        \n                    \n                \n            \n            \n                \ncomputeBmi(weight: number, height: number)\n                \n            \n\n\n\n\n            \n                \n                    A general purpose function which returns the BMI.\nTodo: Could be moved later to a library for reuse.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weight\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        computeBmiCategoryAndHealthRisk\n                        \n                    \n                \n            \n            \n                \ncomputeBmiCategoryAndHealthRisk(bmi: number)\n                \n            \n\n\n\n\n            \n                \n                    A general purpose function which returns the BMI related parameters.\nTodo: Could be moved later to a library for reuse.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bmi\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initialiseEnvironment\n                        \n                    \n                \n            \n            \n                \ninitialiseEnvironment()\n                \n            \n\n\n\n\n            \n                \n                    This function acts as a bootstrapper for preparing environment for application.\nAlso loads the env for local development using json file path imported from config file.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadEnvFromJsonFile\n                        \n                    \n                \n            \n            \n                \nloadEnvFromJsonFile(filePath: string)\n                \n            \n\n\n\n\n            \n                \n                    Reads the JSON from file and loads its variables in the environment.\nUses a helper function for reading JSON file.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        path of the environment file.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeReadJsonFile\n                        \n                    \n                \n            \n            \n                \nsafeReadJsonFile(filePath: string)\n                \n            \n\n\n\n\n            \n                \n                    This function provides resilience if a file is not in JSON syntax.\nAlso handles the file read related errors like \"file does not exist\".\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/bmiComponent/bmi.controller.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseExpressRequest\n                        \n                    \n                \n            \n            \n                \nparseExpressRequest(req: any)\n                \n            \n\n\n\n\n            \n                \n                    This function converts an express request into a generic object.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nA typescript starter template that uses object oriented, modular structure at heart.\nIncludes a sample module providing structure for extending the template with more modules.\nUsage Instructions(for running the calculator)\n\nClone the repo with command: git clone https://github.com/epathak/code-20211027-tejaspathak.git.\n\nOR Download as a zip: https://github.com/epathak/code-20211027-tejaspathak/archive/refs/heads/main.zip and unzip it.\n\nThen run command: start.bat on Windows or start.sh on Linux/Mac.\n\nCall the api: http://localhost:3000/api/bmi from your favorite test tool to see the results.\n\n\nUsage Instructions(for development)\n\nClone the repo with command: git clone https://github.com/epathak/code-20211027-tejaspathak.git.\n\nOR Download as a zip: https://github.com/epathak/code-20211027-tejaspathak/archive/refs/heads/main.zip and unzip it.\n\nFor first run: npm run build & npm run start or npm run debug as needed.\n\nThe source files are located in src folder, start modifying and happy coding!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 Tejas Pathak\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appControllers   (src/.../app.controllers.ts)\n                        \n                        \n                            ENV_FILE_PATH   (src/.../config.ts)\n                        \n                        \n                            log   (src/.../log.module.ts)\n                        \n                        \n                            logComponent   (src/.../log.module.ts)\n                        \n                        \n                            server   (src/.../server.ts)\n                        \n                        \n                            STATIC_FILES_PATH   (src/.../config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/appComponent/app.controllers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appControllers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Controller[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  new BmiController(new BmiModule())\n]\n                    \n                \n\n            \n                \n                    A single point for defining all sub-applications.\n\n                \n            \n\n        \n    \n\n    src/config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENV_FILE_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'env_sample.json'\n                    \n                \n\n            \n                \n                    A single file enlisting all the configuration used within the application.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STATIC_FILES_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'documentation'\n                    \n                \n\n            \n                \n                    The variable for configuring the path of folder containing the static files for frontend.\n\n                \n            \n\n        \n    \n\n    src/logComponent/log.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n                \n                    \n                        Default value : logComponent.log.bind(logComponent)\n                    \n                \n\n            \n                \n                    The instance of log component's log function which is exported for use in other modules\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logComponent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new LogComponent()\n                    \n                \n\n            \n                \n                    The instance of log component which is used like singleton(single object is created ever)\n\n                \n            \n\n        \n    \n\n    src/server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        server\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new AppModule(appControllers)\n                    \n                \n\n            \n                \n                    Create and start the server(instance of application module).\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
